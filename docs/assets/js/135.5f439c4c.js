(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{450:function(t,a,s){"use strict";s.r(a);var e=s(4),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"基础概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础概念"}},[t._v("#")]),t._v(" 基础概念")]),t._v(" "),a("blockquote",[a("p",[t._v("1、静态编译类型，非动态（OC默认动态，Swift默认是静态）")]),t._v(" "),a("p",[t._v("2、区分大小写（敏感）")]),t._v(" "),a("p",[t._v("3、支持面向过程编程、面向对象编程和泛型编程（Swift支持泛型编程）")]),t._v(" "),a("p",[t._v("4、介于低级语言和高级语言之间")]),t._v(" "),a("p",[t._v("5、兼容大部分中低版本的C语法")]),t._v(" "),a("p",[t._v("6、面向对象四大特性：封装、抽象、继承、多态")]),t._v(" "),a("p",[t._v("7、标准库： C++ 三部分组成")]),t._v(" "),a("p",[t._v("基础语言、变量、数据类型和常量，等等")]),t._v(" "),a("p",[t._v("大量的 标准库函数，操作文件、字符串等")]),t._v(" "),a("p",[t._v("标准模板库操作数据结构等")]),t._v(" "),a("p",[t._v("8、通用性：一般C++代码在 Mac、UNIX、Windows、Alpha 计算机上都能通过编译")]),t._v(" "),a("p",[t._v("9、C++ 程序的源文件通常使用扩展名 .cpp（默认）、.cp 或 .c（少）")]),t._v(" "),a("p",[t._v("10、编译器： GNU 的 gcc 编译器适合于 C 和 C++ 编程语言的编译")]),t._v(" "),a("p",[t._v("11、基本语法组成：类对象、方法、变量")])]),t._v(" "),a("h3",{attrs:{id:"版本、库历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本、库历史"}},[t._v("#")]),t._v(" 版本、库历史")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("发布时间")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("通称")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2020")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C++20")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("第六个C++标准")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2017")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C++17")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("第五个C++标准")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2017")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("coroutines TS")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("协程库扩展")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2017")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("ranges TS")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("提供范围机制")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2017")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("library fundamentals TS")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("标准库扩展")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2016")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("concurrency TS")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("用于并发计算的扩展")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2015")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("concepts TS")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("概念库，用于优化编译期信息")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2015")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("TM TS")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("事务性内存操作")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2015")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("parallelism TS")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("用于并行计算的扩展")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2015")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("filesystem TS")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("文件系统")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2014")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C++14")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("第四个C++标准")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2011")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("十进制浮点数扩展")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2011")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C++11")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("第三个C++标准")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2010")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("数学函数扩展")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2007")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C++TR1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C++技术报告：库扩展")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2006")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C++性能技术报告")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2003")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C++03")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("第二个C++标准")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("1998")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C++98")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("第一个C++标准")])])])]),t._v(" "),a("h3",{attrs:{id:"编译器安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译器安装"}},[t._v("#")]),t._v(" 编译器安装")]),t._v(" "),a("p",[t._v("GNU 的 C/C++")]),t._v(" "),a("p",[a("strong",[t._v("Linux 或 UNIX")]),t._v(" 安装 GCC，按照 "),a("a",{attrs:{href:"https://gcc.gnu.org/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://gcc.gnu.org/install/"),a("OutboundLink")],1),t._v(" 安装")]),t._v(" "),a("p",[t._v("Mac OS X，苹果系统的Xcode 会携带")]),t._v(" "),a("p",[t._v("Xcode 目前可从 "),a("a",{attrs:{href:"https://developer.apple.com/technologies/tools/",target:"_blank",rel:"noopener noreferrer"}},[t._v("developer.apple.com/technologies/tools/"),a("OutboundLink")],1),t._v(" 上下载")]),t._v(" "),a("p",[t._v("Windows 上安装 GCC，要安装 MinGW，请访问 MinGW 的主页 "),a("a",{attrs:{href:"http://www.mingw-w64.org/doku.php",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.mingw.org"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"hello-world"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[t._v("#")]),t._v(" Hello World")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引入支持输入输出的库")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命名空间")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 程序开始执行入口函数")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cout 输出")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),a("h3",{attrs:{id:"编译-执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译-执行"}},[t._v("#")]),t._v(" 编译 & 执行")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、将上面代码保存文件为 hello.cpp\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、gcc编译文件，并默认生成 a.out可执行文件\n$ g++ hello.cpp  \n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、键入"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' a.out'")]),t._v(" 来运行程序\n$ ./a.out\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("、屏幕上显示\nHello World\n")])])]),a("p",[t._v("也可以使用 makefile 来编译 C/C++ 程序")]),t._v(" "),a("h3",{attrs:{id:"语句结束符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语句结束符"}},[t._v("#")]),t._v(" 语句结束符")]),t._v(" "),a("p",[t._v("分号是语句结束符。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"代码块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码块"}},[t._v("#")]),t._v(" 代码块")]),t._v(" "),a("p",[t._v("块是一组使用大括号括起来的按逻辑连接的语句")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 Hello World")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),a("h3",{attrs:{id:"命名规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[t._v("#")]),t._v(" 命名规范")]),t._v(" "),a("p",[t._v("标识符规范：")]),t._v(" "),a("p",[t._v("标识变量、函数、类、模块，或任何其他用户自定义项目的名称。")]),t._v(" "),a("p",[t._v("以字母 A-Z 或 a-z 或下划线 _ 开始，后跟零个或多个字母、下划线和数字（0-9）")]),t._v(" "),a("p",[t._v("不允许出现标点字符，比如 @、$ 和 %。")]),t._v(" "),a("p",[t._v("命名区分大小写")]),t._v(" "),a("h3",{attrs:{id:"关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键字"}},[t._v("#")]),t._v(" 关键字")]),t._v(" "),a("p",[t._v("关键字，就是被系统占用的名称，需要取其它名称，避开它")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("asm")]),t._v(" "),a("th",[t._v("else")]),t._v(" "),a("th",[t._v("new")]),t._v(" "),a("th",[t._v("this")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("auto")]),t._v(" "),a("td",[t._v("enum")]),t._v(" "),a("td",[t._v("operator")]),t._v(" "),a("td",[t._v("throw")])]),t._v(" "),a("tr",[a("td",[t._v("bool")]),t._v(" "),a("td",[t._v("explicit")]),t._v(" "),a("td",[t._v("private")]),t._v(" "),a("td",[t._v("true")])]),t._v(" "),a("tr",[a("td",[t._v("break")]),t._v(" "),a("td",[t._v("export")]),t._v(" "),a("td",[t._v("protected")]),t._v(" "),a("td",[t._v("try")])]),t._v(" "),a("tr",[a("td",[t._v("case")]),t._v(" "),a("td",[t._v("extern")]),t._v(" "),a("td",[t._v("public")]),t._v(" "),a("td",[t._v("typedef")])]),t._v(" "),a("tr",[a("td",[t._v("catch")]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td",[t._v("register")]),t._v(" "),a("td",[t._v("typeid")])]),t._v(" "),a("tr",[a("td",[t._v("char")]),t._v(" "),a("td",[t._v("float")]),t._v(" "),a("td",[t._v("reinterpret_cast")]),t._v(" "),a("td",[t._v("typename")])]),t._v(" "),a("tr",[a("td",[t._v("class")]),t._v(" "),a("td",[t._v("for")]),t._v(" "),a("td",[t._v("return")]),t._v(" "),a("td",[t._v("union")])]),t._v(" "),a("tr",[a("td",[t._v("const")]),t._v(" "),a("td",[t._v("friend")]),t._v(" "),a("td",[t._v("short")]),t._v(" "),a("td",[t._v("unsigned")])]),t._v(" "),a("tr",[a("td",[t._v("const_cast")]),t._v(" "),a("td",[t._v("goto")]),t._v(" "),a("td",[t._v("signed")]),t._v(" "),a("td",[t._v("using")])]),t._v(" "),a("tr",[a("td",[t._v("continue")]),t._v(" "),a("td",[t._v("if")]),t._v(" "),a("td",[t._v("sizeof")]),t._v(" "),a("td",[t._v("virtual")])]),t._v(" "),a("tr",[a("td",[t._v("default")]),t._v(" "),a("td",[t._v("inline")]),t._v(" "),a("td",[t._v("static")]),t._v(" "),a("td",[t._v("void")])]),t._v(" "),a("tr",[a("td",[t._v("delete")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("static_cast")]),t._v(" "),a("td",[t._v("volatile")])]),t._v(" "),a("tr",[a("td",[t._v("do")]),t._v(" "),a("td",[t._v("long")]),t._v(" "),a("td",[t._v("struct")]),t._v(" "),a("td",[t._v("wchar_t")])]),t._v(" "),a("tr",[a("td",[t._v("double")]),t._v(" "),a("td",[t._v("mutable")]),t._v(" "),a("td",[t._v("switch")]),t._v(" "),a("td",[t._v("while")])]),t._v(" "),a("tr",[a("td",[t._v("dynamic_cast")]),t._v(" "),a("td",[t._v("namespace")]),t._v(" "),a("td",[t._v("template")]),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"三字符组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三字符组"}},[t._v("#")]),t._v(" 三字符组")]),t._v(" "),a("p",[t._v("通过?? 加上符号来表示另一个符号，这很少有，通常编译器也不支持，g++支持但是会警告。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("三字符组")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("替换")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("??=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("#")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("??/")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("\\")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("??'")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("^")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("??(")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("[")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("??)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("]")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("??!")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("|")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("??<")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("{")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("??>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("}")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("??-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("~")])])])]),t._v(" "),a("p",[t._v("假如开启了三字符编译，??= 字符串该如何表示？ 使用 ??=")]),t._v(" "),a("h3",{attrs:{id:"注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[t._v("#")]),t._v(" 注释")]),t._v(" "),a("p",[t._v("三种注释区别：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 注释\n * 可以跨行\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 单行局部注释，后面代码有效 */")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 Hello World!（ 后面所有代码都是注释范围 ）")]),t._v("\n   cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"日期-时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期-时间"}},[t._v("#")]),t._v(" 日期 & 时间")]),t._v(" "),a("p",[t._v("获取当前系统的日期和时间，包括本地时间和协调世界时（UTC）。")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<ctime>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 基于当前系统的当前日期/时间")]),t._v("\n    time_t now "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1970年1月1日到目前经过的秒数:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" now "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    tm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("ltm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("localtime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("now"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出 tm 结构的各个组成部分")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"年: "')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1900")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ltm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("tm_year "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"月: "')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ltm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("tm_mon"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"日: "')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("  ltm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("tm_mday "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"时间: "')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ltm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("tm_hour "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ltm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("tm_min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" ltm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("tm_sec "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),a("p",[t._v("结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1970年1月1日到目前经过的秒数:1688304716\n年: 2023\n月: 7\n日: 2\n时间: 14:32:57\n")])])]),a("h2",{attrs:{id:"数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据"}},[t._v("#")]),t._v(" 数据")]),t._v(" "),a("h3",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),a("p",[t._v("1、系统类型")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("关键字")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("布尔型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("bool")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("字符型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("char")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("整型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("int")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("浮点型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("float")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("双浮点型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("double")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("无类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("void")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("宽字符型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("wchar_t")])])])]),t._v(" "),a("p",[t._v("2、基本类型修饰符：（可以使用一个或多个）")]),t._v(" "),a("ul",[a("li",[t._v("signed")]),t._v(" "),a("li",[t._v("unsigned")]),t._v(" "),a("li",[t._v("short")]),t._v(" "),a("li",[t._v("long")])]),t._v(" "),a("p",[t._v("3、变量类型占用的内存（不同系统会有所差异）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("位")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("范围")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("char")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-128 到 127 或者 0 到 255")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned char")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0 到 255")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("signed char")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-128 到 127")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-2147483648 到 2147483647")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0 到 4294967295")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("signed int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-2147483648 到 2147483647")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("short int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-32768 到 32767")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned short int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0 到 65,535")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("signed short int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-32768 到 32767")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("long int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("signed long int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-9,223,372,036,854,775,808 到 9,223,372,036,854,775,807")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("unsigned long int")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0 到 18,446,744,073,709,551,615")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("float")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("精度型占4个字节（32位）内存空间，+/- 3.4e +/- 38 (~7 个数字)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("double")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("8 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("双精度型占8 个字节（64位）内存空间，+/- 1.7e +/- 308(~15 个数字)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("long double")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("16 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("长双精度型 16 个字节（128位）内存空间，可提供18-19位有效数字。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("wchar_t")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2 或 4 个字节")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1 个宽字符")])])])]),t._v(" "),a("p",[t._v("sizeof：获取类型内存大小")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Size of char : "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Size of int : "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"typedef-别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typedef-别名"}},[t._v("#")]),t._v(" typedef 别名")]),t._v(" "),a("p",[t._v("使用 "),a("strong",[t._v("typedef")]),t._v(" 为一个已有的类型取一个新的名字（别名）")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取别名，下面可以用Count 替换 int")]),t._v("\n   count min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"min ="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" min "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("结果")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("min =3\n")])])]),a("h3",{attrs:{id:"枚举类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#枚举类型"}},[t._v("#")]),t._v(" 枚举类型")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RGB")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n    blue \n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" rgb1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rgb2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rgb3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n  rgb1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  rgb2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  rgb3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" blue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RGB:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" rgb1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RGB:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" rgb2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RGB:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" rgb3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("RGB:0\nRGB:1\nRGB:2\n")])])]),a("p",[t._v("默认情况下，第一个枚举值为 0，第二个枚举值为 1，第三个枚举值为 2，以此递增。")]),t._v(" "),a("p",[t._v("可以尝试设置某个值")]),t._v(" "),a("h3",{attrs:{id:"【变量、常量】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【变量、常量】"}},[t._v("#")]),t._v(" 【变量、常量】")]),t._v(" "),a("p",[t._v("包括基础数据类型变量、"),a("strong",[t._v("枚举、指针、数组、引用、数据结构、类")]),t._v("等等")]),t._v(" "),a("p",[a("strong",[t._v("未初始化阶段：")])]),t._v(" "),a("p",[t._v("1、数据类型声明通常都是0")]),t._v(" "),a("p",[t._v("2、对象类型声明通常默认NULL")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量声明：extern 关键字允许函数体外声明变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数声明")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func_area")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变量定义, 此时变量还是0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 实际初始化")]),t._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func_area")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数定义(如果没有函数声明，那么文件上面的代码不能调用，通常函数编译时能读取上面的定义)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func_area")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"左值、右值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#左值、右值"}},[t._v("#")]),t._v(" 左值、右值")]),t._v(" "),a("p",[t._v("左值（Lvalues）和右值（Rvalues）")]),t._v(" "),a("p",[t._v("通常对象是左值，数据是右值")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a 是左值， 10 是右值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a 是右值")]),t._v("\n")])])]),a("h3",{attrs:{id:"局部变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局部变量"}},[t._v("#")]),t._v(" 局部变量")]),t._v(" "),a("p",[t._v("在函数或一个代码块内部声明的变量，称为局部变量：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 局部变量声明")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),a("h3",{attrs:{id:"全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局变量"}},[t._v("#")]),t._v(" 全局变量")]),t._v(" "),a("blockquote",[a("p",[t._v("函数外部定义的变量（通常是在程序的头部），称为全局变量。")]),t._v(" "),a("p",[t._v("程序的整个生命周期内都是有效的。")]),t._v(" "),a("p",[t._v("全局变量可以被任何函数访问。")])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 全局变量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" g "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"g="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" g "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取的是全局变量g，不可能访问main函数内的g变量，作用域限制的。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 局部变量")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" g "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n    cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"g="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" g "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取当前函数内的局部变量g")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),a("p",[t._v("结果")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("g=4\ng=2\n\n")])])]),a("p",[t._v("⚠️ 都是打印g 结果不一样，一个取的是全局变量g。一个取当前函数内的局部变量g")]),t._v(" "),a("h3",{attrs:{id:"整数常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整数常量"}},[t._v("#")]),t._v(" 整数常量")]),t._v(" "),a("p",[t._v("常量：固定的值，又叫做"),a("strong",[t._v("字面量")]),t._v("。")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("85         // 十进制\n0213       // 八进制 \n0x4b       // 十六进制 \n30         // 整数 \n30u        // 无符号整数 \n30l        // 长整数 \n30ul       // 无符号长整数\n\n212         // 合法的\n215u        // 合法的\n0xFeeL      // 合法的\n078         // 非法的：8 不是八进制的数字\n032UU       // 非法的：不能重复后缀\n")])])]),a("h3",{attrs:{id:"浮点常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点常量"}},[t._v("#")]),t._v(" 浮点常量")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("3.14159       // 合法的 \n314159E-5L    // 合法的 \n510E          // 非法的：不完整的指数\n210f          // 非法的：没有小数或指数\n.e55          // 非法的：缺少整数或分数\n")])])]),a("h3",{attrs:{id:"布尔常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔常量"}},[t._v("#")]),t._v(" 布尔常量")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("true")]),t._v(" 值代表真（不是1）")]),t._v(" "),a("li",[a("strong",[t._v("false")]),t._v(" 值代表假（不是0）")])]),t._v(" "),a("p",[t._v("在Object-C中有值且非0表示真，否则都是假")]),t._v(" "),a("p",[t._v("Swift同C++，bool都是表示真假")]),t._v(" "),a("h3",{attrs:{id:"字符常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符常量"}},[t._v("#")]),t._v(" 字符常量")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("转义序列")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("\\ 字符（转义字符表示后面的内容特殊含义）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("'")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("' 字符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v('"')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('" 字符')])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("?")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("? 字符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\a")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("警报铃声")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("退格键")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\f")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("换页符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\n")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("换行符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\r")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("回车")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\t")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("水平制表符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\v")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("垂直制表符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\ooo")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一到三位的八进制数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("\\xhh . . .")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一个或多个数字的十六进制数")])])])]),t._v(" "),a("h3",{attrs:{id:"字符串常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串常量"}},[t._v("#")]),t._v(" 字符串常量")]),t._v(" "),a("p",[t._v("下面这三种形式所显示的字符串是相同的:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tstring a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tstring b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, \\\nstring"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\tstring c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n  cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"字符串a="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"字符串b="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\tcout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"字符串c="')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),a("p",[t._v("结果：")]),t._v(" "),a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("字符串a=hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string\n字符串b=hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string\n字符串c=hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string\n\n")])])]),a("h3",{attrs:{id:"define-预处理器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#define-预处理器"}},[t._v("#")]),t._v(" [#define] 预处理器")]),t._v(" "),a("p",[t._v("预处理#define ： 定义常量的一种方式， 不可修改，不能使用变量")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 宏定义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("kWidth")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("39")])])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" kWidth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"const-常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const-常量"}},[t._v("#")]),t._v(" const 常量")]),t._v(" "),a("p",[t._v("例：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" kWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("39")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义const常量，不可修改")]),t._v("\n   cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" kWidth"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),a("p",[t._v("⚠️")]),t._v(" "),a("p",[t._v("const常量，不可修改，否则 error: assignment of read-only variable ‘kWidth’")]),t._v(" "),a("h2",{attrs:{id:"数据修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据修饰符"}},[t._v("#")]),t._v(" 数据修饰符")]),t._v(" "),a("p",[t._v("1、数据类型修饰符可以限制数据类型的精度和符号")]),t._v(" "),a("p",[t._v("2、修饰符 "),a("strong",[t._v("signed、unsigned、long 和 short")]),t._v(" 可应用于整型，")]),t._v(" "),a("p",[t._v("3、"),a("strong",[t._v("signed")]),t._v(" 和 "),a("strong",[t._v("unsigned")]),t._v(" 可应用于字符型，")]),t._v(" "),a("p",[t._v("4、"),a("strong",[t._v("long")]),t._v(" 可应用于双精度型。")]),t._v(" "),a("p",[t._v("5、也可以双修饰")]),t._v(" "),a("p",[t._v("例如："),a("strong",[t._v("unsigned long int")]),t._v("。")]),t._v(" "),a("p",[t._v("6、特殊修饰")]),t._v(" "),a("p",[t._v("可以不写 int 而表示整型：只写单词 "),a("strong",[t._v("unsigned short")]),t._v(" 或 "),a("strong",[t._v("unsigned long")]),t._v("，int 是隐含的")]),t._v(" "),a("h3",{attrs:{id:"类型限定符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型限定符"}},[t._v("#")]),t._v(" 类型限定符")]),t._v(" "),a("p",[t._v("类型限定符提供了变量的额外信息。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("限定符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("const")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("编译器开始就是固定的，不可修改")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("volatile")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("修饰符 "),a("strong",[t._v("volatile")]),t._v(" 告诉编译器，变量的值不确定的（不会缓存，每次都会重新获取）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("restrict")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("由 "),a("strong",[t._v("restrict")]),t._v(" 修饰的指针是唯一一种访问它所指向的对象的方式。只有 C99 增加了新的类型限定符 restrict。")])])])]),t._v(" "),a("h3",{attrs:{id:"存储类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储类"}},[t._v("#")]),t._v(" 存储类")]),t._v(" "),a("p",[t._v("存储类：限定变量/函数的范围（可见性）和生命周期。")]),t._v(" "),a("h3",{attrs:{id:"存储修饰-auto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储修饰-auto"}},[t._v("#")]),t._v(" 存储修饰： auto")]),t._v(" "),a("p",[a("strong",[t._v("auto")]),t._v(" 存储类是所有局部变量默认的存储类，可以不记")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"存储修饰-register"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储修饰-register"}},[t._v("#")]),t._v(" 存储修饰： register")]),t._v(" "),a("p",[t._v("通常定义存储在寄存器中，用于需要快速访问的变量")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("register")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"存储修饰-static"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储修饰-static"}},[t._v("#")]),t._v(" 存储修饰： static")]),t._v(" "),a("p",[t._v("static 修饰符也可以应用于局部（函数体内）、全局变量（当前文件内访问）。")]),t._v(" "),a("p",[t._v("static 修饰变量是被类共享的，多个对象，不同函数体内读取的都是"),a("strong",[t._v("同一份")])]),t._v(" "),a("h3",{attrs:{id:"存储修饰-extern"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储修饰-extern"}},[t._v("#")]),t._v(" 存储修饰： extern")]),t._v(" "),a("p",[t._v("extern ：")]),t._v(" "),a("p",[t._v("1、字面意思：外部链接的，也即是可供其他文件使用")]),t._v(" "),a("p",[t._v("2、存储类全局变量的引用，它是跨文件访问的，不只是当前文件访问")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//file1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("88")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明并定义拥有外部链接的全局常量a,供外部文件file2访问")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//file2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extern")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//声明全局常量a, 但是定义是来自于file1或其他文件的，当前文件拿来使用")]),t._v("\n")])])]),a("h3",{attrs:{id:"存储修饰-mutable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储修饰-mutable"}},[t._v("#")]),t._v(" 存储修饰： mutable")]),t._v(" "),a("p",[t._v("mutable ：")]),t._v(" "),a("p",[t._v("1、表示修饰成员是可以修改的，通常需要和const（常量的）结合使用")]),t._v(" "),a("p",[t._v("2、仅适用于类的对象")]),t._v(" "),a("p",[t._v("3、通常使用场景：const 修饰的成员函数内修改的变量需要是mutable修饰的，否则编译错误（因为const修饰后，原本默认可修改的成员调用时都相当于被const修饰，除非显式mutable修饰）")]),t._v(" "),a("p",[t._v("4、"),a("strong",[t._v("const修饰成员函数")])]),t._v(" "),a("p",[t._v("const修饰成员函数的时候，const需要放在成员函数的后面，不能放在一开始，，若是放在一开始的话，那么const修饰的是函数的返回值，而非是修饰成员函数了")]),t._v(" "),a("p",[t._v("(示例不是很恰当)")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<ctime>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      string name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" borth_year"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mutable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 年龄")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const修饰成员函数（非mutable修饰的成员均不能在此函数内存在修改行为）")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("desc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        time_t curtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("curtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        tm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("nowtime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("localtime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("curtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果 age 没有mutable修饰，那么这里就会报错")]),t._v("\n        age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1900")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" nowtime"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("tm_year "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" borth_year"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"姓名："')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"年龄："')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Person person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小明"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("borth_year "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("desc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("姓名：小明\n年龄：5\n")])])]),a("p",[t._v("上述示例中，const 成员函数中可以修改 mutable 修饰可变成员 age。")]),t._v(" "),a("p",[t._v("但是早先mutable 是不支持的，我们进行如下改造：")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("<ctime>")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      string name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" borth_year"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const修饰成员函数")]),t._v("\n\t\t\ttime_t curtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("curtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\ttm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("nowtime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("localtime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("curtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1900")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" nowtime"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("tm_year "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" borth_year"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const修饰成员函数")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("desc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"姓名："')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       cout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"年龄："')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v("endl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("string n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tborth_year "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   Person "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小树"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n   person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("desc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("姓名：小树\n年龄：5\n")])])]),a("h2",{attrs:{id:"数据运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据运算"}},[t._v("#")]),t._v(" 数据运算")]),t._v(" "),a("p",[t._v("不同数据类型，不同系统，以及相同系统下不同算法优化 下所占用的内存大小均可能不相同")]),t._v(" "),a("h3",{attrs:{id:"数据占用大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据占用大小"}},[t._v("#")]),t._v(" 数据占用大小")]),t._v(" "),a("p",[t._v("常见数据类型不同系统内存大小：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("数据类型")]),t._v(" "),a("th",[t._v("16位系统（占字节数）")]),t._v(" "),a("th",[t._v("32位系统（占字节数）")]),t._v(" "),a("th",[t._v("64位系统（占字节数）")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("char")]),t._v(" "),a("td",[t._v("1（个字节，下同）")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("1")])]),t._v(" "),a("tr",[a("td",[t._v("short")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("2")])]),t._v(" "),a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("4")])]),t._v(" "),a("tr",[a("td",[t._v("unsigned int")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("4")])]),t._v(" "),a("tr",[a("td",[t._v("float")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("4")])]),t._v(" "),a("tr",[a("td",[t._v("double")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("8")])]),t._v(" "),a("tr",[a("td",[t._v("long")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("8")])]),t._v(" "),a("tr",[a("td",[t._v("long long")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("8")])]),t._v(" "),a("tr",[a("td",[t._v("unsigned long")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("8")])]),t._v(" "),a("tr",[a("td",[t._v("指针")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("8")])]),t._v(" "),a("tr",[a("td",[t._v("最大数据范围")]),t._v(" "),a("td",[t._v("2^16")]),t._v(" "),a("td",[t._v("2^32")]),t._v(" "),a("td",[t._v("2^64")])]),t._v(" "),a("tr",[a("td"),t._v(" "),a("td"),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"字节、字、位、比特"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节、字、位、比特"}},[t._v("#")]),t._v(" 字节、字、位、比特")]),t._v(" "),a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("1字母a = 1 byte = 8 bit = 8 位二进制数\n\n1 汉字 = 2 个字节byte = 16 字节bit（2*8） = 16 位二进制数\n")])])]),a("h4",{attrs:{id:"_1、位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、位"}},[t._v("#")]),t._v(" 1、位")]),t._v(" "),a("p",[t._v("计算机都是二进制数，由0和1表示")]),t._v(" "),a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("1001 为4位\n")])])]),a("h4",{attrs:{id:"_2、比特-bit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、比特-bit"}},[t._v("#")]),t._v(" 2、比特（bit）")]),t._v(" "),a("p",[t._v("表示二进制位的单位")]),t._v(" "),a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("1001 为4 bit\n")])])]),a("h4",{attrs:{id:"_3、字节-byte"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、字节-byte"}},[t._v("#")]),t._v(" 3、字节（byte）")]),t._v(" "),a("p",[t._v("字节（byte）是组成文字和字母的单位")]),t._v(" "),a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("1 byte = 8 bit = 8 位二进制数\n")])])]),a("h4",{attrs:{id:"_4、字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、字"}},[t._v("#")]),t._v(" 4、字")]),t._v(" "),a("p",[t._v("比如汉字 “中国” 包含两个字，一个字占两个 “字节 ”， “中国” 字符串占 4个字节")]),t._v(" "),a("p",[t._v("比如字母 “abc” 占3个字节，也就是每个字母占一个字节")]),t._v(" "),a("div",{staticClass:"language-scss extra-class"},[a("pre",{pre:!0,attrs:{class:"language-scss"}},[a("code",[t._v("1字母a = 1 byte = 8 bit = 8 位二进制数\n\n1 汉字 = 2 个字节byte = 16 字节bit（2*8） = 16 位二进制数\n")])])]),a("h4",{attrs:{id:"_5、字块-连续的字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、字块-连续的字"}},[t._v("#")]),t._v(" 5、字块（连续的字）")]),t._v(" "),a("p",[t._v("多个文字或者字母等组成的内容为一个字块")]),t._v(" "),a("p",[t._v("比如磁道上的字群就称为一个字块。在磁带上通常每120个字符就间隔一个字块际志，也称为一个字块")]),t._v(" "),a("h4",{attrs:{id:"_6、字长-长度度量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、字长-长度度量"}},[t._v("#")]),t._v(" 6、字长（长度度量）")]),t._v(" "),a("p",[t._v("“中国” 两个字，")]),t._v(" "),a("p",[t._v("字节（byte）为度量单位时，字长为4个字节的长度")]),t._v(" "),a("p",[t._v("比特（bit）为度量单位时，字长为4*8=32个 bit的长度")]),t._v(" "),a("h3",{attrs:{id:"【运算符】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【运算符】"}},[t._v("#")]),t._v(" 【运算符】")]),t._v(" "),a("h3",{attrs:{id:"运算符-算术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符-算术"}},[t._v("#")]),t._v(" 运算符：算术")]),t._v(" "),a("p",[t._v("算术运算符：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("+")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("把两个操作数相加")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("A + B")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从第一个操作数中减去第二个操作数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("A - B")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("*")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("把两个操作数相乘")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("A * B")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("/")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("分子除以分母")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("B / A")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("%")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("取模运算符，整除后的余数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("B % A")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("++")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("自增运算符，整数值增加 1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("A++")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("--")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("自减运算符，整数值减少 1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("A--")])])])]),t._v(" "),a("h3",{attrs:{id:"运算符-关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符-关系"}},[t._v("#")]),t._v(" 运算符：关系")]),t._v(" "),a("p",[t._v("关系运算符：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("==")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("值相等则条件为真，否则假")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("(A == B)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("!=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("值不相等则条件为真，否则假")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("(A != B)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v(">")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("值大于则条件为真，否则假")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("(A > B)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("<")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("值小于则条件为真，否则假")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("(A < B)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v(">=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("值大于或等于则条件为真，否则假")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("(A >= B)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("<=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("值小于或等于则条件为真，否则假")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("(A <= B)")])])])]),t._v(" "),a("h3",{attrs:{id:"运算符-逻辑"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符-逻辑"}},[t._v("#")]),t._v(" 运算符：逻辑")]),t._v(" "),a("p",[t._v("关系逻辑运算符：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("&&")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("左右均为真，则条件为真。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("(A && B)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("||")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("左右至少一个为真，则条件为真")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("(A || B)")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("!")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("取反")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("!A")])])])]),t._v(" "),a("h3",{attrs:{id:"运算符-位运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符-位运算"}},[t._v("#")]),t._v(" 运算符：位运算")]),t._v(" "),a("p",[t._v("位运算符（二进制操作）：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("&")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("同位数操作，都是1计算为1，否则0")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("101 & 11 =  101")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("|")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("同位数操作，至少一个1，则1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("10 ｜ 11 =  11")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("^")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不相同的值为1，相同为0")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1^1=0；0^1=1；1^0=1；0^0=0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("~")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v('二进制取反运算符："翻转"位效果，依赖数据类型')]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("~ 0010 = 1101")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("<<")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("二进制左移运算符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("11 << 2  为  1100")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v(">>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("二进制右移运算符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("11 >> 2 为 0")])])])]),t._v(" "),a("p",[t._v("位运算符作用于位，并逐位执行操作。&、 | 和 ^ 的真值表如下所示：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("p")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("q")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("p & q")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("p | q")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("p ^ q")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")])])])]),t._v(" "),a("h3",{attrs:{id:"运算符-赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符-赋值"}},[t._v("#")]),t._v(" 运算符：赋值")]),t._v(" "),a("p",[t._v("下表列出了 C++ 支持的赋值运算符：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("简单的赋值运算符，把右边操作数的值赋给左边操作数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C = A + B 将把 A + B 的值赋给 C")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("+=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("加且赋值运算符，把右边操作数加上左边操作数的结果赋值给左边操作数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C += A 相当于 C = C + A")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("-=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("减且赋值运算符，把左边操作数减去右边操作数的结果赋值给左边操作数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C -= A 相当于 C = C - A")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("*=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("乘且赋值运算符，把右边操作数乘以左边操作数的结果赋值给左边操作数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C *= A 相当于 C = C * A")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("/=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("除且赋值运算符，把左边操作数除以右边操作数的结果赋值给左边操作数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C /= A 相当于 C = C / A")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("%=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("求模且赋值运算符，求两个操作数的模赋值给左边操作数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C %= A 相当于 C = C % A")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("<<=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("左移且赋值运算符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C <<= 2 等同于 C = C << 2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v(">>=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("右移且赋值运算符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C >>= 2 等同于 C = C >> 2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("&=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("按位与且赋值运算符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C &= 2 等同于 C = C & 2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("^=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("按位异或且赋值运算符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C ^= 2 等同于 C = C ^ 2")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("|=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("按位或且赋值运算符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("C |= 2 等同于 C = C | 2")])])])]),t._v(" "),a("p",[t._v("请看下面的实例，了解 C++ 中所有可用的赋值运算符。")]),t._v(" "),a("p",[t._v("复制并黏贴下面的 C++ 程序到 test.cpp 文件中，编译并运行程序。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('#include <iostream>\nusing namespace std;\n\nint main()\n{\n    int a = 21;\n    int c ;\n    c =  a;\n    cout << "Line 1 - =  运算符实例，c 的值 = : " <<c<< endl ;\n    c +=  a;\n    cout << "Line 2 - += 运算符实例，c 的值 = : " <<c<< endl ;\n    c -=  a;\n    cout << "Line 3 - -= 运算符实例，c 的值 = : " <<c<< endl ;\n    c *=  a;\n    cout << "Line 4 - *= 运算符实例，c 的值 = : " <<c<< endl ;\n    c /=  a;\n    cout << "Line 5 - /= 运算符实例，c 的值 = : " <<c<< endl ;\n    c  = 200;\n    c %=  a;\n    cout << "Line 6 - %= 运算符实例，c 的值 = : " <<c<< endl ;\n    c <<=  2;\n    cout << "Line 7 - <<= 运算符实例，c 的值 = : " <<c<< endl ;\n    c >>=  2;\n    cout << "Line 8 - >>= 运算符实例，c 的值 = : " <<c<< endl ;\n    c &=  2;\n    cout << "Line 9 - &= 运算符实例，c 的值 = : " <<c<< endl ;\n    c ^=  2;\n    cout << "Line 10 - ^= 运算符实例，c 的值 = : " <<c<< endl ;\n    c |=  2;\n    cout << "Line 11 - |= 运算符实例，c 的值 = : " <<c<< endl ;\n    return 0; \n} \n')])])]),a("p",[t._v("尝试一下")]),t._v(" "),a("p",[t._v("当上面的代码被编译和执行时，它会产生下列结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Line 1 - =  运算符实例，c 的值 = 21\nLine 2 - += 运算符实例，c 的值 = 42\nLine 3 - -= 运算符实例，c 的值 = 21\nLine 4 - *= 运算符实例，c 的值 = 441\nLine 5 - /= 运算符实例，c 的值 = 21\nLine 6 - %= 运算符实例，c 的值 = 11\nLine 7 - <<= 运算符实例，c 的值 = 44 Line 8 - >>= 运算符实例，c 的值 = 11\nLine 9 - &= 运算符实例，c 的值 = 2\nLine 10 - ^= 运算符实例，c 的值 = 0\nLine 11 - |= 运算符实例，c 的值 = 2\n")])])]),a("h3",{attrs:{id:"运算符-其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符-其他"}},[t._v("#")]),t._v(" 运算符：其他")]),t._v(" "),a("p",[t._v("下表列出了 C++ 支持的其他一些重要的运算符。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sizeof")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.w3cschool.cn/cpp/cpp-sizeof-operator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("sizeof 运算符"),a("OutboundLink")],1),t._v("返回变量的大小。例如，sizeof(a) 将返回 4，其中 a 是整数。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Condition ? X : Y")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.w3cschool.cn/cpp/cpp-conditional-operator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("条件运算符"),a("OutboundLink")],1),t._v("。如果 Condition 为真 ? 则值为 X : 否则值为 Y。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v(",")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.w3cschool.cn/cpp/cpp-comma-operator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("逗号运算符"),a("OutboundLink")],1),t._v("会顺序执行一系列运算。整个逗号表达式的值是以逗号分隔的列表中的最后一个表达式的值。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v(".（点）和 ->（箭头）")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.w3cschool.cn/cpp/cpp-member-operators.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("成员运算符"),a("OutboundLink")],1),t._v("用于引用类、结构和共用体的成员。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Cast")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.w3cschool.cn/cpp/cpp-casting-operators.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("强制转换运算符"),a("OutboundLink")],1),t._v("把一种数据类型转换为另一种数据类型。例如，int(2.2000) 将返回 2。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("&")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.w3cschool.cn/cpp/cpp-pointer-operators.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("指针运算符 &"),a("OutboundLink")],1),t._v(" 返回变量的地址。例如 &a; 将给出变量的实际地址。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("*")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.w3cschool.cn/cpp/cpp-pointer-operators.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("指针运算符 *"),a("OutboundLink")],1),t._v(" 指向一个变量。例如，*var; 将指向变量 var。")])])])]),t._v(" "),a("h3",{attrs:{id:"运算符-优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符-优先级"}},[t._v("#")]),t._v(" 运算符：优先级")]),t._v(" "),a("p",[t._v("运算符的优先级确定表达式中项的组合。这会影响到一个表达式如何计算。某些运算符比其他运算符有更高的优先级，例如，乘除运算符具有比加减运算符更高的优先级。")]),t._v(" "),a("p",[t._v("例如 x = 7 + 3 * 2，在这里，x 被赋值为 13，而不是 20，因为运算符 * 具有比 + 更高的优先级，所以首先计算乘法 3*2，然后再加上 7。")]),t._v(" "),a("p",[t._v("下表将按运算符优先级从高到低列出各个运算符，具有较高优先级的运算符出现在表格的上面，具有较低优先级的运算符出现在表格的下面。在表达式中，较高优先级的运算符会优先被计算。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类别")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("结合性")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("后缀")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("() [] -> . ++ - -")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("一元")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("+ - ! ~ ++ - - (type)* & sizeof")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从右到左")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("乘除")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("* / %")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("加减")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("+ -")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("移位")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("<< >>")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("关系")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("< <= > >=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("相等")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("== !=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("位与 AND")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("&")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("位异或 XOR")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("^")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("位或 OR")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("|")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑与 AND")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("&&")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑或 OR")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("||")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("条件")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("?:")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从右到左")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("赋值")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("= += -= *= /= %=>>= <<= &= ^= |=")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从右到左")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("逗号")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v(",")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从左到右")])])])]),t._v(" "),a("p",[t._v("请看下面的实例，了解 C++ 中运算符的优先级。")]),t._v(" "),a("p",[t._v("复制并黏贴下面的 C++ 程序到 test.cpp 文件中，编译并运行程序。")]),t._v(" "),a("p",[t._v("对比有括号和没有括号时的区别，这将产生不同的结果。因为 ()、 /、 * 和 + 有不同的优先级，高优先级的操作符将优先计算。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('#include <iostream>\nusing namespace std;\n \nint main()\n{\n    int a = 20;\n    int b = 10;\n    int c = 15;\n    int d = 5;\n    int e;\n \n    e = (a + b) * c / d;      // ( 30 * 15 ) / 5\n    cout << "(a + b) * c / d 的值是 " << e << endl ;\n\n    e = ((a + b) * c) / d;    // (30 * 15 ) / 5\n    cout << "((a + b) * c) / d 的值是 " << e << endl ;\n\n    e = (a + b) * (c / d);   // (30) * (15/5)\n    cout << "(a + b) * (c / d) 的值是 " << e << endl ;\n\n    e = a + (b * c) / d;     //  20 + (150/5)\n    cout << "a + (b * c) / d 的值是 " << e << endl ;\n  \n    return 0;\n}\n')])])]),a("p",[t._v("尝试一下")]),t._v(" "),a("p",[t._v("当上面的代码被编译和执行时，它会产生下列结果：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("(a + b) * c / d 的值是 90\n((a + b) * c) / d 的值是 90\n(a + b) * (c / d) 的值是 90\na + (b * c) / d 的值是 50\n")])])]),a("h3",{attrs:{id:"【运算逻辑】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【运算逻辑】"}},[t._v("#")]),t._v(" 【运算逻辑】")]),t._v(" "),a("h3",{attrs:{id:"运算-原码、反码、补码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算-原码、反码、补码"}},[t._v("#")]),t._v(" 运算：原码、反码、补码")]),t._v(" "),a("p",[t._v("计算机是二进制计算，严格说没有减法的说法，只有加法，都是采用补码进行运算")]),t._v(" "),a("p",[a("strong",[t._v("1、数据类型")])]),t._v(" "),a("p",[t._v("数据操作前提，首先明确一点是数据类型, 不同类型数据内存空间大小不一样")]),t._v(" "),a("p",[a("strong",[t._v("2、高位为符号位")])]),t._v(" "),a("p",[t._v("第一位是符号位. 因为第一位是符号位, 所以8位二进制数的取值范围就是:")]),t._v(" "),a("p",[t._v("[1111 1111 , 0111 1111]")]),t._v(" "),a("p",[t._v("也就是[-127,127];")]),t._v(" "),a("p",[t._v("第一位是1代表负数，第一位0代表正数")]),t._v(" "),a("p",[a("strong",[t._v("3、负数")])]),t._v(" "),a("p",[t._v("原码、反码、补码 是相对于负数来说的，正数都是相同的")]),t._v(" "),a("h3",{attrs:{id:"运算-正、负"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算-正、负"}},[t._v("#")]),t._v(" 运算：正、负")]),t._v(" "),a("p",[a("strong",[t._v("正数")]),t._v("：原码=反码=补码")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n原码："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0101")]),t._v(" \n反码："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0101")]),t._v(" \n补码："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0101")]),t._v("\n\n三者相同\n")])])]),a("p",[a("strong",[t._v("负数：")])]),t._v(" "),a("p",[t._v("原码=正数原码最高位变1")]),t._v(" "),a("p",[t._v("反码=原码（除符号位）都取反，")]),t._v(" "),a("p",[t._v("补码=反码+1")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n原码："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0101")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正数5原码最高位变1")]),t._v("\n反码："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1111")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1010")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 原码（除符号位）都取反")]),t._v("\n补码："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1111")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1011")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 反码+1")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"运算-加、减"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算-加、减"}},[t._v("#")]),t._v(" 运算：加、减")]),t._v(" "),a("p",[t._v("运算：")]),t._v(" "),a("p",[t._v("【补码 + 补码 】的形式进行的")]),t._v(" "),a("p",[t._v("1、加法")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("补码："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0101")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("补码："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0101")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n 结果："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1010")]),t._v("\n")])])]),a("p",[t._v("2、减法")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("补码："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0101")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("补码："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1111")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1011")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n  结果："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0000")]),t._v(" \n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" 也就是"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 虽然二进制不一样，但是数据一样"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);