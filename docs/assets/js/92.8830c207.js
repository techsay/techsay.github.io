(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{402:function(t,s,a){"use strict";a.r(s);var e=a(4),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"算术指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算术指令"}},[t._v("#")]),t._v(" 算术指令")]),t._v(" "),s("h3",{attrs:{id:"inc-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inc-指令"}},[t._v("#")]),t._v(" INC 指令")]),t._v(" "),s("p",[t._v("INC指令用于将操作数加1。它对可以在寄存器或内存中的单个操作数起作用。")]),t._v(" "),s("p",[t._v("INC指令具有以下语法-")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("INC destination\n")])])]),s("p",[t._v("目标操作数可以是8位，16位或32位操作数。")]),t._v(" "),s("p",[t._v("例")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("INC "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("EBX")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";  32-bit 寄存器 自增1")]),t._v("\nINC "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("DL")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";  8-bit 寄存器 自增1")]),t._v("\nINC "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";  变量count  自增1")]),t._v("\n")])])]),s("h3",{attrs:{id:"dec指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dec指令"}},[t._v("#")]),t._v(" DEC指令")]),t._v(" "),s("p",[t._v("DEC指令用于将操作数减1。它对可以在寄存器或内存中的单个操作数起作用。")]),t._v(" "),s("p",[t._v("DEC指令具有以下语法-")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("DEC destination\n")])])]),s("p",[t._v("操作数目的地可以是8位，16位或32位操作数。")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("segment .data\n   count dw  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n   value db  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n        \nsegment .text\n   inc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("\n   dec "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("\n        \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", count\n   inc word "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("\n        \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("esi")]),t._v(", value\n   dec byte "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("esi")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("\n")])])]),s("h3",{attrs:{id:"add和sub指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add和sub指令"}},[t._v("#")]),t._v(" ADD和SUB指令")]),t._v(" "),s("p",[s("strong",[t._v("ADD")]),t._v("和"),s("strong",[t._v("SUB")]),t._v("指令用于对字节，字和双字大小的二进制数据进行简单的加/减，即分别用于添加或减去8位，16位或32位操作数。")]),t._v(" "),s("p",[t._v("ADD和SUB指令具有以下语法-")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("ADD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("SUB destination, source\n")])])]),s("p",[t._v("ADD / SUB指令可以发生在-")]),t._v(" "),s("ul",[s("li",[t._v("寄存器 to 寄存器")]),t._v(" "),s("li",[t._v("内存 to 寄存器")]),t._v(" "),s("li",[t._v("寄存器 to 内存")]),t._v(" "),s("li",[t._v("寄存器 to 常量数据")]),t._v(" "),s("li",[t._v("内存 to 常量数据")])]),t._v(" "),s("p",[t._v("但是，像其他指令一样，使用ADD / SUB指令也无法进行存储器到存储器的操作。ADD或SUB操作设置或清除溢出和进位标志。")]),t._v(" "),s("p",[t._v("下面的示例将要求用户输入两位数字，分别将这些数字存储在EAX和EBX寄存器中，将这些值相加，将结果存储在“ res ”存储位置中，最后显示结果。")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("SYS_EXIT  equ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\nSYS_READ  equ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\nSYS_WRITE equ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\nSTDIN     equ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nSTDOUT    equ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\nsegment .data \n\n   msg1 db "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Enter a digit "')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xA")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xD")]),t._v(" \n   len1 equ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" msg1 \n\n   msg2 db "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Please enter a second digit"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xA")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xD")]),t._v(" \n   len2 equ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" msg2 \n\n   msg3 db "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The sum is: "')]),t._v("\n   len3 equ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" msg3\n\nsegment .bss\n\n   num1 resb "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n   num2 resb "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n   res resb "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .text")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global _start    ")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";must be declared for using gcc")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";tell linker entry point")]),t._v("\n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", SYS_WRITE         \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", STDOUT         \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", msg1         \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", len1 \n   int "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("                \n\n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", SYS_READ \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", STDIN  \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", num1 \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n   int "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("            \n\n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", SYS_WRITE        \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", STDOUT         \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", msg2          \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", len2         \n   int "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("\n\n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", SYS_READ  \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", STDIN  \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", num2 \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n   int "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("        \n\n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", SYS_WRITE         \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", STDOUT         \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", msg3          \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", len3         \n   int "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; moving the first number to eax register and second number to ebx")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; and subtracting ascii '0' to convert it into a decimal number")]),t._v("\n        \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("num1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("\n   sub "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n        \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("num2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("\n   sub "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; add eax and ebx")]),t._v("\n   add "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; add '0' to to convert the sum from decimal to ASCII")]),t._v("\n   add "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; storing the sum in memory location res")]),t._v("\n   mov "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; print the sum ")]),t._v("\n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", SYS_WRITE        \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", STDOUT\n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", res         \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("        \n   int "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("exit:")]),t._v("    \n   \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", SYS_EXIT   \n   xor "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(" \n   int "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://www.jc2182.com/runcode.html?filename=jisuan1&type=21&module=jiaocheng",target:"_blank",rel:"noopener noreferrer"}},[t._v("尝试一下"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("编译并执行上述代码后，将产生以下结果-")]),t._v(" "),s("div",{staticClass:"language-t4 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-t4"}},[s("code",[t._v("Enter a digit:\n3\nPlease enter a second digit:\n4\nThe sum is:\n7\n")])])]),s("p",[t._v("具有硬编码变量的程序-")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .text")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global _start    ")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";must be declared for using gcc")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";tell linker entry point")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n   sub     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n        \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),t._v("\n   sub     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n   add  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v("\n   add  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n        \n   mov  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("sum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(",msg \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", len\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";file descriptor (stdout)")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";system call number (sys_write)")]),t._v("\n   int  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";call kernel")]),t._v("\n        \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(",sum\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";file descriptor (stdout)")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";system call number (sys_write)")]),t._v("\n   int  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";call kernel")]),t._v("\n        \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";system call number (sys_exit)")]),t._v("\n   int  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";call kernel")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .data")]),t._v("\n   msg db "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The sum is:"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xA")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xD")]),t._v(" \n   len equ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" msg   \n   segment .bss\n   sum resb "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://www.jc2182.com/runcode.html?filename=jisuan2&type=21&module=jiaocheng",target:"_blank",rel:"noopener noreferrer"}},[t._v("尝试一下"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("编译并执行上述代码后，将产生以下结果-")]),t._v(" "),s("div",{staticClass:"language-t4 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-t4"}},[s("code",[t._v("The sum is:\n7\n")])])]),s("p",[t._v("⚠️  认真阅读发现，前面我们示例都是个位数的运算，如果直接换成个位以上的数运算就会得到错误的结果，原因就是溢出，下面在  乘法 中介绍 “进位” 相关的处理")]),t._v(" "),s("h3",{attrs:{id:"mul-乘法指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mul-乘法指令"}},[t._v("#")]),t._v(" MUL 乘法指令")]),t._v(" "),s("blockquote",[s("p",[t._v("1、mul乘法指令是无符号计算的，也就是不支持负数（imul支持负数）")]),t._v(" "),s("p",[t._v("2、mul是单指令，也就是后面只能跟一个参数（imul支持多参）")])]),t._v(" "),s("p",[t._v("32 位模式下，MUL（无符号数乘法）指令有三种类型：")]),t._v(" "),s("blockquote",[s("p",[t._v("1、执行 8 位操作数与 AL 寄存器的乘法；\n2、执行 16 位操作数与 AX 寄存器的乘法；\n3、执行 32 位操作数与 EAX 寄存器的乘法。")])]),t._v(" "),s("p",[t._v("乘积溢出")]),t._v(" "),s("blockquote",[s("p",[t._v("MUL 指令中的单操作数是乘数。乘积结果存放的空间是被乘数和乘数大小的两倍，因此不会发生溢岀")]),t._v(" "),s("p",[t._v("比如，两个8位二进制数的乘积不会超过16位。两个16位乘积不会超过32位等等（除法会溢出）")])]),t._v(" "),s("p",[t._v("MUL无符号、单指令乘法表：")]),t._v(" "),s("p",[t._v("MUL: 无符号乘 ;影响 OF、CF 标志位 ;")]),t._v(" "),s("p",[t._v("指令格式: ;MUL r/m ;参数是乘数 ;")]),t._v(" "),s("p",[t._v("如果参数是 r8/m8, 将把 AL 做乘数, 结果放在 AX ;（8位）")]),t._v(" "),s("p",[t._v("如果参数是 r16/m16, 将把 AX 做乘数, 结果放在 EAX ;（16位）")]),t._v(" "),s("p",[t._v("如果参数是 r32/m32, 将把 EAX 做乘数, 结果放在 EDX:EAX （32位）")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("被乘数")]),t._v(" "),s("th",[t._v("乘数")]),t._v(" "),s("th",[t._v("乘积存放位置")]),t._v(" "),s("th",[t._v("解析")]),t._v(" "),s("th",[t._v("标记位")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("AL")]),t._v(" "),s("td",[t._v("reg8/mem8")]),t._v(" "),s("td",[t._v("AX")]),t._v(" "),s("td",[t._v("MUL操作数是8位寄存器，自动将AL当作被乘数。结果存放AX")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("AX")]),t._v(" "),s("td",[t._v("reg16/mem16")]),t._v(" "),s("td",[t._v("DX:AX")]),t._v(" "),s("td",[t._v("MUL操作数是16位寄存器，自动将AX当作被乘数。结果的低位放在AX，高位在DX")]),t._v(" "),s("td",[t._v("CF = 1 标记位1表示DX有高位数据。CF = 0 表示DX没有高位数据，AX中已经显示全")])]),t._v(" "),s("tr",[s("td",[t._v("EAX")]),t._v(" "),s("td",[t._v("reg16/mem32")]),t._v(" "),s("td",[t._v("EDX:EAX")]),t._v(" "),s("td",[t._v("MUL操作数是32位寄存器，自动将EAX当作被乘数。结果的低位在EAX，高位在EDX")]),t._v(" "),s("td")])])]),t._v(" "),s("h4",{attrs:{id:"_1、8位汇编"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、8位汇编"}},[t._v("#")]),t._v(" 1、8位汇编")]),t._v(" "),s("p",[s("strong",[t._v("8086芯片 intel-8  位汇编个位乘法")])]),t._v(" "),s("p",[t._v("MUL（乘法）指令，在C语法中，使用 int a = 2 * 3; 能很方便的计算乘法，而在汇编中却没有这么方便，而只有学习汇编，你才能更深入理解 2 * 3 底层到底是如何实现的")]),t._v(" "),s("p",[t._v("示例：乘积小于10处理")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";调用并输出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("macro  run_out "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("                      \n        mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("         \n        mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" \n        int "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("               \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("endmacro\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";退出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("macro  return "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("                      \n        mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   \n        int "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("              \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("endmacro\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";乘法：乘积小于10处理 （ num1，num2）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("macro  mul_oper "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("                      \n         mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("al")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n         sub  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("al")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n\n         mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n         sub  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n         \n         mul  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";这里乘法指令是一种【隐含寻址】方式，下面备注介绍")]),t._v("\n         add  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("al")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n\n         mov  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("al")]),t._v("\n         mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(",res \n         mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("                  \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("endmacro\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section  .text")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global _start    ")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("      \n   mul_oper "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";计算3*3结果")]),t._v("\n   run_out      \n   return     \n\nsegment .bss\nres resb "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[s("strong",[t._v("隐含寻址")]),t._v("\n有些指令的操作码不仅包含了操作的性质，还隐含了部分操作数的地址，如乘法指令MUL，在这条指令中只需指明乘数的地址，而被乘数以及乘积的地址是隐含且固定的。这种将一个操作数隐含在指令码中的寻址方式称为隐含寻址。")]),t._v(" "),s("p",[t._v("例如：")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("mul  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";mul bl的功能把AL中的内容与BL的内容相乘，乘积送到AX寄存器中")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";因此上面示例中我们将另一个送入al，然后会自动隐式从 al 取值")]),t._v("\n")])])]),s("h3",{attrs:{id:"imul-乘法指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#imul-乘法指令"}},[t._v("#")]),t._v(" IMUL 乘法指令")]),t._v(" "),s("p",[t._v("imul乘法指令支持符号运算，支持多参数")]),t._v(" "),s("blockquote",[s("p",[t._v("1、支持正负符号")]),t._v(" "),s("p",[t._v("2、支持2，3个参数，但是三个参数的最后一个必须是立即数")])]),t._v(" "),s("p",[t._v("类似的：")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; a 16 bit multiplication:")]),t._v("\n  mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("factor1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("\n  mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("factor2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("\n  imul "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bx")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 32-bit result in DX:AX")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; or  imul  word [factor2]")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; a 32 bit multiplication:")]),t._v("\n  mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("factor1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("\n  mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("factor2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v(" \n  imul "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 64-bit result in EDX:EAX")]),t._v("\n")])])]),s("p",[t._v("在386或更高版本上")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("\tmov   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("factor1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("\n  imul  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("factor2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; result in ecx, no other registers affected")]),t._v("\n  imul  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; and square the result")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("  \n  \n  movsx   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", word "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("factor1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("\n  movsx   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", word "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("factor2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; sign-extend inputs to 32-bit")]),t._v("\n  imul    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 32-bit multiply, result in EAX")]),t._v("\n  imul    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; and square the result")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n  imul  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("cx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; requires 186")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\timul  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; requires 386")]),t._v("\n")])])]),s("h3",{attrs:{id:"div-idiv指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#div-idiv指令"}},[t._v("#")]),t._v(" DIV / IDIV指令")]),t._v(" "),s("h4",{attrs:{id:"示例-6-3-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例-6-3-2"}},[t._v("#")]),t._v(" 示例：6/3=2")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .text")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global _start    ")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";must be declared for using gcc")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";tell linker entry point")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'6'")]),t._v("\n   sub     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n        \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v("\n   sub     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n   div  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v("\n   add  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n        \n   mov  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("res"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ax")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(",msg \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", len\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";file descriptor (stdout)")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";system call number (sys_write)")]),t._v("\n   int  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";call kernel")]),t._v("\n        \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(",res\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";file descriptor (stdout)")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";system call number (sys_write)")]),t._v("\n   int  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";call kernel")]),t._v("\n        \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";system call number (sys_exit)")]),t._v("\n   int  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";call kernel")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .data")]),t._v("\nmsg db "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The result is:"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xA")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xD")]),t._v(" \nlen equ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" msg   \nsegment .bss\nres resb "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"https://www.jc2182.com/runcode.html?filename=jisuan4&type=21&module=jiaocheng",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线运行上面示例："),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"div-idiv-x86-32位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#div-idiv-x86-32位"}},[t._v("#")]),t._v(" DIV / IDIV （x86 - 32位）")]),t._v(" "),s("h4",{attrs:{id:"div-无符号除法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#div-无符号除法"}},[t._v("#")]),t._v(" DIV 无符号除法")]),t._v(" "),s("blockquote",[s("p",[t._v("DIV \t寄存器或内存(8位)\nDIV \t寄存器或内存(16位)\nDIV \t寄存器或内存(32位)")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("被除数")]),t._v(" "),s("th",[t._v("除数")]),t._v(" "),s("th",[t._v("商")]),t._v(" "),s("th",[t._v("余数")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("AX")]),t._v(" "),s("td",[t._v("reg/mem8")]),t._v(" "),s("td",[t._v("AL")]),t._v(" "),s("td",[t._v("AH")])]),t._v(" "),s("tr",[s("td",[t._v("DX:AX")]),t._v(" "),s("td",[t._v("reg/mem16")]),t._v(" "),s("td",[t._v("AX")]),t._v(" "),s("td",[t._v("DX")])]),t._v(" "),s("tr",[s("td",[t._v("EDX:EAX")]),t._v(" "),s("td",[t._v("reg/mem32")]),t._v(" "),s("td",[t._v("EAX")]),t._v(" "),s("td",[t._v("EDX")])])])]),t._v(" "),s("p",[t._v("比例")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0043h")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 被除数")]),t._v("\nmov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 除数")]),t._v("\ndiv "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; AL = 08h, AH = O3h")]),t._v("\n")])])]),s("p",[t._v("⚠️")]),t._v(" "),s("p",[t._v("1、除数不能为0，需要判断")]),t._v(" "),s("p",[t._v("2、商或余数存储超过对应空间大小就会抛出异常")]),t._v(" "),s("p",[t._v("3、不占用的寄存器需要清空")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("DX")]),t._v(" 包含的是被除数的高位部分，因此在执行 DIV 指令之前，必须将其清零：\n\nmov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("dx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 清除被除数高16位")]),t._v("\nmov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8003h")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 被除数的低16位")]),t._v("\nmov ex, "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100h")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 除数")]),t._v("\ndiv ex                "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; AX = 0080h, DX = 0003h")]),t._v("\n\n")])])]),s("h4",{attrs:{id:"idiv-有符号数除法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#idiv-有符号数除法"}},[t._v("#")]),t._v(" IDIV 有符号数除法")]),t._v(" "),s("p",[t._v("有符号除法与无符号几乎相同，但是在计算前必须对被除数进行符号扩展。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("指令")])]),t._v(" "),s("th",[s("strong",[t._v("全称")])]),t._v(" "),s("th",[s("strong",[t._v("说明")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("cbw")]),t._v(" "),s("td",[s("strong",[t._v("c")]),t._v("onvert "),s("strong",[t._v("b")]),t._v("yte to "),s("strong",[t._v("w")]),t._v("ord")]),t._v(" "),s("td",[t._v("将AL的符号位扩展到AH")])]),t._v(" "),s("tr",[s("td",[t._v("cwd")]),t._v(" "),s("td",[s("strong",[t._v("c")]),t._v("onvert "),s("strong",[t._v("w")]),t._v("ord to "),s("strong",[t._v("d")]),t._v("oubleword")]),t._v(" "),s("td",[t._v("将AX的符号位扩展到DX")])]),t._v(" "),s("tr",[s("td",[t._v("cdq")]),t._v(" "),s("td",[s("strong",[t._v("c")]),t._v("onvert "),s("strong",[t._v("d")]),t._v("oubleword to "),s("strong",[t._v("q")]),t._v("uadword")]),t._v(" "),s("td",[t._v("将EAX的符号位扩展到EDX")])])])]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v(".data\nwordval sword "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),t._v("\n \n.code\nmain PROC\n    nop\n    mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("dx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ax")]),t._v(", wordval\n    cwd"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";   DX:AX=FFFF:FF9B，这样的才能保证被除数是负101，否则会被解释为正65435。")]),t._v("\n    mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    idiv "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bx")]),t._v("\n    invoke ExitProcess,"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nmain ENDP\n\n")])])]),s("h2",{attrs:{id:"逻辑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑"}},[t._v("#")]),t._v(" 逻辑")]),t._v(" "),s("p",[t._v("常见逻辑指令 and、or、xor、not、test（测试计算数据）等等")]),t._v(" "),s("h3",{attrs:{id:"逻辑指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#逻辑指令"}},[t._v("#")]),t._v(" 逻辑指令")]),t._v(" "),s("p",[t._v("格式：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("指令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("格式")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("AND")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("AND 操作数1，操作数2")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("OR")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("OR 操作数1，操作数2")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("XOR")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("XOR 操作数1，操作数2")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("TEST")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("TEST 操作数1，操作数2")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("NOT")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("NOT 操作数1")])])])]),t._v(" "),s("h3",{attrs:{id:"and-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#and-指令"}},[t._v("#")]),t._v(" AND 指令")]),t._v(" "),s("p",[t._v("实现按位与运算")]),t._v(" "),s("p",[t._v("1、将寄存器清空")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("AND     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("AH")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("00H")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 高位AH清空")]),t._v("\n")])])]),s("p",[t._v("2、检查奇偶数")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("AND     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("AL")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01H")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 与上 0000 0001")]),t._v("\n")])])]),s("p",[t._v("格式示例：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("and 【寄存器or内存】【寄存器or内存or立即数】 ✅")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("and 【内存】【内存】 ❌")])]),t._v(" "),s("tr",[s("td",[t._v("运算结果会修改对应的标志：")])]),t._v(" "),s("tr",[s("td",[t._v("CF，OF，PF，SF和ZF标志")])])])]),t._v(" "),s("p",[t._v("以下程序说明了这一点-")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .text")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global _start            ")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("                     \n   mov   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ax")]),t._v(",   6h           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";设置数据6（二进制 0110 ），下面开始判断它的奇偶")]),t._v("\n   and   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";通过 0001 & 0110 = 0，此时标记位 ZF=0")]),t._v("\n   jz    even_f             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; jz: ZF 等于 0 成立，跳转 偶数过程 even_f")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";jnz   odd_f               jnz: ZF 不等于 0 成立，跳转 奇数过程 odd_f")]),t._v("\n   jmp   exit               "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; jmp 无条件跳转到 exit")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("even_f:")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";偶数打印")]),t._v("\n  \n   mov   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("             \n   mov   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("             \n   mov   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", even_msg      \n   mov   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", len1          \n   int   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("               \n\n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("odd_f:")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";奇数打印")]),t._v("\n   \n   mov   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("             \n   mov   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("             \n   mov   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", odd_msg       \n   mov   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", len2          \n   int   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("exit:")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";退出")]),t._v("\n   \n   mov   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("             \n   int   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("              \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section   .data")]),t._v("\neven_msg  db  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'是偶数!'")]),t._v(" \nlen1  equ  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" even_msg \n   \nodd_msg db  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'是奇数!'")]),t._v("    \nlen2  equ  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" odd_msg\n")])])]),s("p",[t._v("跳转相关的标志位: 【⚠️ 关于标志位详细介绍后面篇章有介绍】")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("11")]),t._v(" "),s("th",[t._v("10")]),t._v(" "),s("th",[t._v("9")]),t._v(" "),s("th",[t._v("8")]),t._v(" "),s("th",[t._v("7")]),t._v(" "),s("th",[t._v("6")]),t._v(" "),s("th",[t._v("5")]),t._v(" "),s("th",[t._v("4")]),t._v(" "),s("th",[t._v("3")]),t._v(" "),s("th",[t._v("2")]),t._v(" "),s("th",[t._v("1")]),t._v(" "),s("th",[t._v("0")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("OF")]),t._v(" "),s("td",[t._v("DF")]),t._v(" "),s("td",[t._v("IF")]),t._v(" "),s("td",[t._v("TF")]),t._v(" "),s("td",[t._v("SF")]),t._v(" "),s("td",[t._v("ZF")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("AF")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("PF")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("CF")])]),t._v(" "),s("tr",[s("td",[t._v("溢 出")]),t._v(" "),s("td",[t._v("方向")]),t._v(" "),s("td",[t._v("中断")]),t._v(" "),s("td",[t._v("调试")]),t._v(" "),s("td",[t._v("符 号")]),t._v(" "),s("td",[t._v("非零")]),t._v(" "),s("td",[t._v("未 用")]),t._v(" "),s("td",[t._v("辅 助")]),t._v(" "),s("td",[t._v("未 用")]),t._v(" "),s("td",[t._v("奇 偶")]),t._v(" "),s("td",[t._v("未 用")]),t._v(" "),s("td",[t._v("进 位")])])])]),t._v(" "),s("p",[t._v("部分跳转指令和标记位关系：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("程序控制类")]),t._v(" "),s("th",[t._v("无条件转移")]),t._v(" "),s("th",[t._v("JMP")]),t._v(" "),s("th",[t._v("不影响标志位")]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("条 件 转 移")]),t._v(" "),s("td",[t._v("单个 标志 位")]),t._v(" "),s("td",[t._v("JS/JNS")]),t._v(" "),s("td",[t._v("SF=1/0,则转移到目的地址")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("JZ/ JNZ")]),t._v(" "),s("td",[t._v("ZF=1/0,则转移到目的地址")]),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("JP/JNP")]),t._v(" "),s("td",[t._v("PF=1/0,则转移到目的地址")]),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("JB/JNB")]),t._v(" "),s("td",[t._v("CF=1/0,则转移到目的地址")]),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("JO/JNO")]),t._v(" "),s("td",[t._v("OF=1/0,则转移到目的地址")]),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("若干 标志 位的 逻辑 组合")]),t._v(" "),s("td",[t._v("JA")]),t._v(" "),s("td",[t._v("两个无符号数比较，A>B")]),t._v(" "),s("td"),t._v(" "),s("td")])])]),t._v(" "),s("h3",{attrs:{id:"or-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#or-指令"}},[t._v("#")]),t._v(" OR 指令")]),t._v(" "),s("p",[t._v("OR 指令用于通过执行按位或运算来支持逻辑表达式。")]),t._v(" "),s("p",[t._v("例如")]),t._v(" "),s("p",[t._v("4 or 3 结果 = 7")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v(" mov    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("al")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";0100")]),t._v("\n mov    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";0011")]),t._v("\n or     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("al")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";0100 | 0011 = 0111 ")]),t._v("\n add    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("al")]),t._v(", byte "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";格式化")]),t._v("\n")])])]),s("h3",{attrs:{id:"xor-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xor-指令"}},[t._v("#")]),t._v(" XOR 指令")]),t._v(" "),s("p",[t._v("异或运算：位不同为1，相同为0")]),t._v(" "),s("p",[t._v("例如，")]),t._v(" "),s("p",[t._v("4 xor 3 结果 = 7")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v(" mov    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("al")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";0100")]),t._v("\n mov    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";0011")]),t._v("\n or     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("al")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";0100 xor 0011 = 0111 ")]),t._v("\n add    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("al")]),t._v(", byte "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";格式化")]),t._v("\n")])])]),s("p",[t._v("清零操作：")]),t._v(" "),s("p",[t._v("将操作数与自身进行XOR会将操作数更改为0。这用于清除寄存器。")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("XOR     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("EAX")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("EAX")]),t._v("\n")])])]),s("h3",{attrs:{id:"test-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#test-指令"}},[t._v("#")]),t._v(" TEST 指令")]),t._v(" "),s("p",[t._v("TEST 指令与AND运算的工作原理相同，但与AND指令不同的是，它不会更改第一个操作数。")]),t._v(" "),s("p",[t._v("因此，可以使用test测试某个逻辑运算的结果：")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("AND    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("AL")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01H")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";会修改AL的值")]),t._v("\n\nTEST    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("AL")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("01H")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";不会修改AL的值")]),t._v("\n")])])]),s("h3",{attrs:{id:"not-指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#not-指令"}},[t._v("#")]),t._v(" NOT 指令")]),t._v(" "),s("p",[t._v("NOT 指令实现按位NOT运算。NOT操作将操作数中的位取反。操作数可以在寄存器中，也可以在存储器中。")]),t._v(" "),s("p",[t._v("NOT 是单操作，接受一个参数")]),t._v(" "),s("p",[t._v("例如，")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v(" mov    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("al")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";0100")]),t._v("\n mov    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";0011")]),t._v("\n or     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("al")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("bl")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";al = 0100 | 0011 = 0111 ")]),t._v("\n not    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("al")]),t._v(" \t\t\t          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";al = 0000 0111 取反 = 1111 1000")]),t._v("\n")])])]),s("h2",{attrs:{id:"条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件"}},[t._v("#")]),t._v(" 条件")]),t._v(" "),s("p",[t._v("前面示例已经介绍过一些条件指令，比如 jmp 无条件跳转")]),t._v(" "),s("h3",{attrs:{id:"条件-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件-2"}},[t._v("#")]),t._v(" 条件")]),t._v(" "),s("p",[t._v("条件令可以更改程序中的控制流，分为有条件和无条件：")]),t._v(" "),s("p",[s("strong",[t._v("无条件跳转")]),t._v(" - JMP 就是最常见的，类似 go to")]),t._v(" "),s("p",[s("strong",[t._v("有条件跳转")]),t._v(" - 通过条件判断是否或者如何处理控制流向")]),t._v(" "),s("h3",{attrs:{id:"无条件跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无条件跳转"}},[t._v("#")]),t._v(" 无条件跳转")]),t._v(" "),s("p",[t._v("语法格式")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("JMP     label\n")])])]),s("p",[t._v("JMP指令：直接跳转到指定的过程，不做任何判断")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("                     \n   ...\n   jmp   exit               "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; jmp 无条件跳转到 exit")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("exit:")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";退出")]),t._v("\n   \n   mov   "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("             \n   int   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v(" \n")])])]),s("h3",{attrs:{id:"条件跳转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#条件跳转"}},[t._v("#")]),t._v(" 条件跳转")]),t._v(" "),s("p",[t._v("如果在条件跳转中满足某些指定条件，则控制流将转移到目标指令。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("指令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("标志测试")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JE/JZ")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳转等于或跳转零")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("ZF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JNE/JNZ")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳转不等于或跳转不为零")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("ZF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JG/JNLE")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳转大于或跳转不小于/等于")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("OF，SF，ZF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JGE/JNL")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳转大于/等于或不小于跳转")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("OF，SF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JL/JNGE")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳转小于或不大于/等于")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("OF，SF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JLE/JNG")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳少/等于或跳不大于")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("OF，SF，ZF")])])])]),t._v(" "),s("p",[t._v("以下是对用于逻辑运算的无符号数据使用的条件跳转指令-")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("指令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("标志测试")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JE/JZ")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳转等于或跳转零")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("ZF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JNE/JNZ")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳转不等于或跳转不为零")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("ZF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JA/JNBE")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳转向上或不低于/等于")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("CF，ZF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JAE/JNB")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("高于/等于或不低于")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("CF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JB/JNAE")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳到以下或跳到不高于/等于")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("CF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JBE/JNA")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳到下面/等于或不跳到上方")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("AF，CF")])])])]),t._v(" "),s("p",[t._v("以下条件跳转指令有特殊用途，并检查标志的值-")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("指令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("标志测试")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JXCZ")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果CX为零则跳转")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("没有")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JC")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果携带则跳")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("CF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JNC")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果不携带则跳转")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("CF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JO")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("溢出时跳转")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("OF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JNO")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果没有溢出则跳转")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("OF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JP/JPE")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳校验或偶校验")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("PF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JNP/JPO")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳转无奇偶校验或跳转奇偶校验")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("PF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JS")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳跃符号（负值）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("SF")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("JNS")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳转无符号（正值）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("SF")])])])]),t._v(" "),s("p",[t._v("根据 CX、ECX 寄存器的值跳转:")]),t._v(" "),s("p",[t._v("JCXZ(CX 为 0 则跳转)、JECXZ(ECX 为 0 则跳转);")]),t._v(" "),s("h3",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("p",[t._v("CMP 比较是否相同的指令，通过相减等于0表示相同，否则不相同。")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("CMP     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("AL")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("BL")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";比较他们是否相同,相同 ZF=0")]),t._v("\nJE      equal\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";使用je：判断ZF标记等于0跳转")]),t._v("\n\nCMP     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("AL")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("BH")]),t._v("\nJNE     not_equal   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";使用jne：判断ZF标记不等于0跳转")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("not_equal:")]),t._v(" \n...\n\n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("equal:")]),t._v(" \n...\n")])])]),s("h2",{attrs:{id:"过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[t._v("#")]),t._v(" 过程")]),t._v(" "),s("p",[t._v("可以理解为c 语言的函数")]),t._v(" "),s("p",[t._v("前面示例 jmp、je等条件指令 跳转的就是 过程或子例程")]),t._v(" "),s("p",[t._v("过程的语法：")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("proc_name:")]),t._v("\t\t\t\t "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";过程名称")]),t._v("\n   procedure body  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";过程主体")]),t._v("\n   ...\n   ret\t\t\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";过程的结束由return语句指示")]),t._v("\n")])])]),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .text")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global _start      ")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("    \n   jmp name_1\n   \n "),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("name_2:")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("           \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", names"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("     \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("          \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("          \n   int  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("  \n   jmp exit\n\n "),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("name_1:")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("           \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", names"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("     \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("          \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("          \n   int  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("      \n   jmp name_2\n   \n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("exit:")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("           \n   int  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("            \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .data")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global names")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("names:")]),t._v("\nDW  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lucy'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Andy'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Pete'")]),t._v("\n")])])]),s("h2",{attrs:{id:"循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环"}},[t._v("#")]),t._v(" 循环")]),t._v(" "),s("p",[t._v("c语法中 while 等能很方便实现循环功能")]),t._v(" "),s("p",[t._v("在汇编中可以通过loop 和jmp 等实现")]),t._v(" "),s("h3",{attrs:{id:"循环-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#循环-loop"}},[t._v("#")]),t._v(" 循环 loop")]),t._v(" "),s("p",[t._v("loop指令的格式是：loop 标号")]),t._v(" "),s("p",[t._v("通常我们用loop指令来实现循环功能，cx中存放循环次数。")]),t._v(" "),s("p",[t._v("CPU执行loop指令的时候，要进行两步操作：")]),t._v(" "),s("blockquote",[s("p",[t._v("1、(cx)=(cx)-1；\n2、判断CX中的值，不为零则转至标号处执行程序，如果为零则向下执行。")])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("p",[t._v("循环判断5次，每次都对ax 加一，最后cx=0时循环结束，")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("\tmov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n\tmov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("cx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("loop_1:")]),t._v("\t\t\n\tinc "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ax")]),t._v("\n\t\t\t\n\tloop loop_1\n")])])]),s("p",[t._v("1、标号：loop_1")]),t._v(" "),s("p",[t._v("在汇编语言中，标号代表一个地址，程序中有一个标号loop_1。它实际上标识了一个 地址，")]),t._v(" "),s("p",[t._v("这个地址处有一条指令：inc ax")]),t._v(" "),s("p",[t._v("2、loop loop_1：")]),t._v(" "),s("p",[t._v("CPU执行loop s的时候，要进行两步操作：")]),t._v(" "),s("p",[t._v("① (cx)=(cx)-1；（loop 自动计算的）")]),t._v(" "),s("p",[t._v("②判断cx中的值，不为0则转至标号s所标识的地址处执行，为零则执行下一条指令。")]),t._v(" "),s("p",[t._v("3、在这段程序中第一次执行loop loop_1前，cx=5，ax=5")]),t._v(" "),s("p",[t._v("第一次执行后，cx=4，ax=6")]),t._v(" "),s("p",[t._v("最后一次 cx=0，ax=10")]),t._v(" "),s("p",[t._v("4、用CX和loop指令相配合实现循环功能的3个要点：")]),t._v(" "),s("blockquote",[s("p",[t._v("1、在 CX中存放循环次数；\n2、loop指令中的标号所标识地址要在前面；\n3、要循环执行的程序段，要写在标号和loop指令的中间")])]),t._v(" "),s("h3",{attrs:{id:"例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),s("p",[t._v("从9到0打印：")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .text")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global _start      ")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("               \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";index 起始值")]),t._v("\n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'9'")]),t._v("\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";起始值")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("loop_dec:")]),t._v("\n   mov "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v("\n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n   push "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v("\n        \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", num        \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("        \n   int "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("\n        \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v("\n   sub "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n   dec "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v("\t\t\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";递减")]),t._v("\n   add "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),t._v("\n   pop "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v("\n   loop loop_dec\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";循环，每次自动对 ecx 自减，直到0结束循环")]),t._v("\n        \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("             \n   int "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("              \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .bss")]),t._v("\nnum resb "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[t._v("结果:")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9876543210")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);