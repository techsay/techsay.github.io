(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{385:function(t,s,n){"use strict";n.r(s);var a=n(4),p=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("h3",{attrs:{id:"一维数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一维数组"}},[t._v("#")]),t._v(" 一维数组")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明数组，需指定数量")]),t._v("\ndouble balance[10]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n数组分配空间的时候是连续的内存地址，所声明和初始化时需要知道最大容量。\n数组内存空间是连续的，通常以下标0开始，因为地址连续，可以通过下标找到对应的数据。\n*/")]),t._v(" \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化数组")]),t._v("\ndouble balance[5] = "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("1000.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 2.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 3.4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 7.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 50.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n或者\ndouble balance[] = "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("1000.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 2.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 3.4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 7.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 50.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 赋值")]),t._v("\nbalance[4] = 50.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 取值")]),t._v("\ndouble salary = balance[3]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"多维数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多维数组"}},[t._v("#")]),t._v(" 多维数组")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明 一个二维数组，包含 3 行和 4 列：")]),t._v("\nint x[3][4]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化二维数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("int a[3][4] = ")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*  初始化索引号为 0 的行 */")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*  初始化索引号为 1 的行 */")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*  初始化索引号为 2 的行 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内部嵌套的括号是可选的，下面的初始化与上面是等同的：")]),t._v("\nint a[3][4] = "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("9"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("11"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 访问二维数组元素，第3行，第4列")]),t._v("\nint val = a[2][3]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明创建了一个三维 5 . 10 . 4 整型数组：")]),t._v("\nint threedim[5][10][4]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"传递数组参数给函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传递数组参数给函数"}},[t._v("#")]),t._v(" 传递数组参数给函数")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("以下三种声明方式的结果是一样的：\n  \n1、形式参数是一个指针  \n void "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int *param"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果实际传递对象类型不一致会报错")]),t._v("\n\t\t...\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n\n2、形式参数是一个已定义大小的数组\n  void "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int param[10]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t...\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n  \n3、形式参数是一个未定义大小的数组：\n  void "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myFunction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int param[]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t...\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("h3",{attrs:{id:"从函数返回数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从函数返回数组"}},[t._v("#")]),t._v(" 从函数返回数组")]),t._v(" "),s("p",[t._v("数组做参数时可以直接声明使用数组也可以使用指针，但是，返回值声明只能使用指针")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 函数要生成和返回随机数的数组r */")]),t._v("\nint "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRandom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  static int  r[10]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  int i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设置种子 */")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("srand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unsigned"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("time")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" NULL "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  for "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" i = 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" 10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" ++i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     r[i] = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n  return r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 要调用上面定义函数的主函数 */")]),t._v("\nint main "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   int *p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 一个指向整数的指针 */")]),t._v("\n   int i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n   p = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getRandom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   for "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" i = 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" 10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i++ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*(p + %d) : %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" *"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n   return 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"枚举-enum"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#枚举-enum"}},[t._v("#")]),t._v(" 枚举 Enum")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不用枚举可以使用宏定义一些常量")]),t._v("\n#define MON  1\n#define TUE  2\n#define WED  3\n#define THU  4\n#define FRI  5\n#define SAT  6\n#define SUN  7\n\n-------- 声明 --------\n  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 枚举语法声明格式为：")]),t._v("\nenum　枚举名　"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("枚举元素1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("枚举元素2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("……"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明DAY 枚举，表示星期")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("enum DAY\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      MON=1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TUE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" WED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" THU"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FRI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SAT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SUN\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认0开始递增，可以自定义值 ： summer=3")]),t._v("\nenum season "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("spring"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" summer=3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" autumn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" winter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n--------- 定义 ---------\n  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义一个枚举变量")]),t._v("\nenum DAY day"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义枚举类型DAY的同时，定义枚举变量day 【这里也可以省略 DAY，建议加上】")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("enum DAY\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      MON=1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TUE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" WED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" THU"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FRI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SAT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SUN\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" day"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结合switch")]),t._v("\nswitch "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("day"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    case "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("SAT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"星期六"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        break"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    case "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("SUN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"星期天"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        break"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"工作日"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n--------- 强制转换 ---------\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将整数转换为枚举：")]),t._v("\nint a = 6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nenum DAY weekend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nweekend = "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("enum DAY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//类型转换")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//weekend = a; //错误")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"weekend:%d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("weekend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"回调函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回调函数"}},[t._v("#")]),t._v(" 回调函数")]),t._v(" "),s("p",[t._v("回调函数：函数的入参是 函数指针，这样在一个函数内部能拿到其它函数，并进行调用。")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("#include <stdlib.h>  \n#include <stdio.h>\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化数组：数组指针，数组长度，一个随机函数指针")]),t._v("\nvoid populate_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int *array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size_t arraySize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" int "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("*getNextValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    for "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size_t i=0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i<arraySize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i++"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        array[i] = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNextValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取随机值")]),t._v("\nint "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNextRandomValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    return "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rand")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \nint "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("void"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    int myarray[10]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* getNextRandomValue 不能加括号，否则无法编译，因为加上括号之后相当于传入此参数时传入了 int , 而不是函数指针*/")]),t._v("\n    populate_"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myarray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" getNextRandomValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int i = 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" 10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i++"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" myarray[i]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    return 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),s("p",[t._v("在 C 语言中，字符串实际上是使用空字符 "),s("strong",[t._v("\\0")]),t._v(" 结尾的一维字符数组。因此，"),s("strong",[t._v("\\0")]),t._v(" 是用于标记字符串的结束。")]),t._v(" "),s("p",[s("strong",[t._v("空字符（Null character")]),t._v("）又称结束符，缩写 "),s("strong",[t._v("NUL")]),t._v("，是一个数值为 "),s("strong",[t._v("0")]),t._v(" 的控制字符，"),s("strong",[t._v("\\0")]),t._v(" 是转义字符，意思是告诉编译器，这不是字符 "),s("strong",[t._v("0")]),t._v("，而是空字符。")]),t._v(" "),s("p",[t._v("下面的声明和初始化创建了一个 "),s("strong",[t._v("RUNOOB")]),t._v(" 字符串。由于在数组的末尾存储了空字符 "),s("strong",[t._v("\\0")]),t._v("，所以字符数组的大小比单词 "),s("strong",[t._v("RUNOOB")]),t._v(" 的字符数多一个。")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("char site[7] = "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'R'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'U'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'N'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'O'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'O'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nchar site[7] = "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'R'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'U'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'N'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'O'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'O'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 长度至少比值长度大一，最后要留一个位置给编译器添加")]),t._v("\nchar site[] = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RUNOOB"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("以下是 C/C++ 中定义的字符串的内存表示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2014/09/c-strings-2020-12-21.png",alt:"C/C++ 中的字符串表示"}})]),t._v(" "),s("p",[t._v("字符串的函数：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("序号")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("函数 & 目的")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("strcpy(s1, s2);")]),t._v(" 复制字符串 s2 到字符串 s1。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("strcat(s1, s2);")]),t._v(" 连接字符串 s2 到字符串 s1 的末尾。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("strlen(s1);")]),t._v(" 返回字符串 s1 的长度。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("strcmp(s1, s2);")]),t._v(" 如果 s1 和 s2 是相同的，则返回 0；如果 s1<s2 则返回小于 0；如果 s1>s2 则返回大于 0。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("strchr(s1, ch);")]),t._v(" 返回一个指针，指向字符串 s1 中字符 ch 的第一次出现的位置。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("strstr(s1, s2);")]),t._v(" 返回一个指针，指向字符串 s1 中字符串 s2 的第一次出现的位置。")])])])]),t._v(" "),s("p",[t._v("测试：")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("#include <stdio.h>\n#include <string.h>\n \nint main "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   char str1[14] = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"runoob"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   char str2[14] = "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"google"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   char str3[14]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   int  len "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 复制 str1 到 str3 */")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcpy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"strcpy( str3, str1) :  %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str3 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 连接 str1 和 str2 */")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"strcat( str1, str2):   %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 连接后，str1 的总长度 */")]),t._v("\n   len = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strlen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"strlen(str1) :  %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" len "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n   return 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcpy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  runoob\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" str1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   runoobgoogle\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strlen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  12\n")])])]),s("h2",{attrs:{id:"结构体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构体"}},[t._v("#")]),t._v(" 结构体")]),t._v(" "),s("p",[s("strong",[t._v("数组")]),t._v("：允许定义可存储相同类型数据项的变量，")]),t._v(" "),s("p",[t._v("**结构体：**是 C 编程中另一种用户自定义的可用的数据类型，它允许您存储不同类型的数据项。")]),t._v(" "),s("h3",{attrs:{id:"创建结构体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建结构体"}},[t._v("#")]),t._v(" 创建结构体：")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("---- 1、声明结构体，声明变量 ----\n  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此声明声明了拥有3个成员的结构体，分别为整型的a，字符型的b和双精度的c")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结构体的标签被命名为SIMPLE,没有声明变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("struct SIMPLE\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    int a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    char b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    double c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用SIMPLE标签的结构体，另外声明了变量t1、t2、t3")]),t._v("\nstruct SIMPLE t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t2[20]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" *t3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n---- 2、声明结构体，同时声明变量 ----\n  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或者直接声明变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("struct SIMPLE\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   int a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   char b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   double c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n---- 3、声明结构体，同时声明变量，但是没有标签 ----\n  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此声明声明了拥有3个成员的结构体，分别为整型的a，字符型的b和双精度的c")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//同时又声明了结构体变量s1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这个结构体并没有标明其标签")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("struct \n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    int a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    char b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    double c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n⚠️ 注意： 这里的s1 不等于 前面的t1\n\n---- 4、自定义结构体，声明变量 ----\n  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//也可以用typedef创建新类型")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("typedef struct\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    int a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    char b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    double c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" Simple2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//现在可以用Simple2作为类型声明新的结构体变量")]),t._v("\nSimple2 u1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" u2[20]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" *u3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n---- 5、结构体包含自己 ----\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结构体的成员可以包含其他结构体，也可以包含指向自己结构体类型的指针，而通常这种指针的应用是为了实现一些更高级的数据结构如链表和树等。")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//此结构体的声明包含了指向自己类型的指针，典型的链表结构")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("struct NODE\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    char string[100]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    struct NODE *next_node"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 链表，包含自己")]),t._v("\n  \n  \tstruct SIMPLE a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 也可以包含其它结构体")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n")])])]),s("h3",{attrs:{id:"结构体互相包含"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构体互相包含"}},[t._v("#")]),t._v(" 结构体互相包含")]),t._v(" "),s("p",[t._v("则需要对其中一个结构体进行不完整声明，如下所示：")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("struct B"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ⚠️ 对结构体B进行不完整声明，否则结构体A无法使用B做属性变量")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结构体A中包含指向结构体B的指针")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("struct A\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    struct B *partner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//other members;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结构体B中包含指向结构体A的指针，在A声明完后，B也随之进行声明")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("struct B\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    struct A *partner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//other members;")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"结构体变量初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构体变量初始化"}},[t._v("#")]),t._v(" 结构体变量初始化：")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("#include <stdio.h>\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结构体声明必需在使用结构体函数之前声明，不能在函数的后面，")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数内调用的结构体必需在其前面先声明，不能通过 结构体不完整声明编译成功。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("struct Books\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   char  title[50]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   char  author[50]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   char  subject[100]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   int   book_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" book = "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C 语言"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RUNOOB"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"编程语言"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 123456"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \nint "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title : %s\\nauthor: %s\\nsubject: %s\\nbook_id: %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" book.title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" book.author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" book.subject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" book.book_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("⚠️ 注意点：")]),t._v(" "),s("p",[t._v("1、结构体声明时可以使用后面定义的结构体，只需要提前 声明不完整结构体")]),t._v(" "),s("p",[t._v("2、函数中使用的结构体，必需已经声明，不能是不完整声明")]),t._v(" "),s("p",[t._v("3、函数中使用的其他函数，可以使用后面实现的函数，但是需要在之前进行方法声明。")]),t._v(" "),s("h3",{attrs:{id:"访问结构的成员"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问结构的成员"}},[t._v("#")]),t._v(" 访问结构的成员")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("#include <stdio.h>\n#include <string.h>\n \n\nstruct Books\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   char  title[50]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   char  author[50]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   char  subject[100]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   int   book_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \nint "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   struct Books Book1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 声明 Book1，类型为 Books */")]),t._v("\n \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Book1 详述 */")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcpy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Book1.title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C Programming"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcpy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Book1.author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Nuha Ali"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcpy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Book1.subject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C Programming Tutorial"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   Book1.book_id = 6495407"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误的写法，c 中不能像 oc 一样直接字符串赋值，要使用 strcopy")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Book1.subject = "C Programming Tutorial";')]),t._v("\n  \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 输出 Book1 信息 */")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Book 1 title : %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Book1.title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Book 1 author : %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Book1.author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Book 1 subject : %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Book1.subject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Book 1 book_id : %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Book1.book_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n   return 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"结构作为函数参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#结构作为函数参数"}},[t._v("#")]),t._v(" 结构作为函数参数")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("#include <stdio.h>\n#include <string.h>\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结构体声明必需在使用函数之前完成")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("struct Books\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   char  title[50]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   char  author[50]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   char  subject[100]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   int   book_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 函数声明：函数实现在后面，但是必需提前声明函数方法 */")]),t._v("\nvoid "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printBook")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" struct Books book "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nint "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   struct Books Book1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 声明 Book1，类型为 Books */")]),t._v("\n \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Book1 详述 */")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcpy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Book1.title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C Programming"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcpy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Book1.author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Nuha Ali"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcpy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Book1.subject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C Programming Tutorial"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   Book1.book_id = 6495407"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 输出 Book1 信息，传入结构体变量 */")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printBook")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" Book1 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   return 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数实现，结构体作参数，传入的是结构体变量名，而不是指针")]),t._v("\nvoid "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printBook")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" struct Books book "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Book title : %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" book.title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Book author : %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" book.author"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Book subject : %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" book.subject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Book book_id : %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" book.book_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"共用体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#共用体"}},[t._v("#")]),t._v(" "),s("strong",[t._v("共用体")])]),t._v(" "),s("p",[t._v("在介绍共用体结构之前，先回顾一下前面介绍的数据类型：")]),t._v(" "),s("p",[t._v("1、int 整形")]),t._v(" "),s("p",[t._v("2、数组：一纬度或者多维，但是存储的内容是单一的。字符串是\\0结尾的一纬数组")]),t._v(" "),s("p",[t._v("3、结构体：可以存储不同类型的变量值，每个变量都可以初始化。")]),t._v(" "),s("p",[t._v("4、指针：一种特殊的结构，指向地址的变量")]),t._v(" "),s("p",[t._v("5、共用体：可以定义不同类型的成员变量，但是只能有一个变量初始化，这样可以达到节省内存的作用，OC里的指针isa就是共用体结构")]),t._v(" "),s("p",[s("strong",[t._v("代码举例")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("#include <stdio.h>\n#include <string.h>\n \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、声明一个共用体Data，包含一个整形，浮点型，和字符串")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("union Data\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   int i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   float f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   char  str[20]"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \nint "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   union Data data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        \n \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、共用体占用的总内存大小： 以成员变量最大的为准。这样保证都能初始化")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Memory size occupied by data : %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、所有变量赋值完成后立即打印结果")]),t._v("\n   data.i = 10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data.i : %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data.i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n   data.f = 220.5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data.f : %f\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data.f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   \n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("strcpy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" data.str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C Programming"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data.str : %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data.str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4、全部打印一遍呢？")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data.i : %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data.i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data.f : %f\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data.f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"data.str : %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data.str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n   return 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("结果：")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 立即打印")]),t._v("\ndata."),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10\ndata."),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("f")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 220.500000\ndata."),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" C Programming\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最后全部打印")]),t._v("\ndata."),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("i")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1917853763\ndata."),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("f")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 4122360580327794860452759994368.000000\ndata."),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" C Programming\n")])])]),s("p",[t._v("可以看到共用体的 "),s("strong",[t._v("i")]),t._v(" 和 "),s("strong",[t._v("f")]),t._v(" 成员的值有损坏，因为最后赋给变量的值占用了内存位置")]),t._v(" "),s("p",[t._v("这样印证共用体只有最后一次赋值的变量能正确取值")]),t._v(" "),s("h2",{attrs:{id:"位域结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#位域结构"}},[t._v("#")]),t._v(" 位域结构")]),t._v(" "),s("p",[t._v("前面介绍了共用体结构，目的是节省内存，声明了多个成员变量，但是同时就会有一个有值。")]),t._v(" "),s("p",[t._v("那么位域是什么结构呢？")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、比如结构体声明如下：")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("struct STATUS\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  unsigned int tag1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值是0 或者 1")]),t._v("\n  unsigned int tag2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值小于 3")]),t._v("\n  unsigned int tag3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值小于 8")]),t._v("\n  unsigned int tag4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 值是0 或者 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" sta1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n那么4个变量占用4*4=16字节 = 16*8 = 128位\n  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、但是实际上只用到了4位有效位数，针对这种场景可以进行进一步优化，就是位域结构：")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("struct STATUS\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 位域声明： type + 变量名 + 冒号 + 占用位数")]),t._v("\n  unsigned int "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("tag1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 占用1位（值是0 或者 1）")]),t._v("\n  unsigned int "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("tag2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 占用2位（值小于 3）")]),t._v("\n  unsigned int "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("tag3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 占用3位（值小于 8）")]),t._v("\n  unsigned int "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("tag4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 占用1位（值是0 或者 1）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" sta2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n那么这4个变量一共占用 1+2+3+1 = 7位，也就是一个字节就够用了，但是实际分配就是一个int的占用，也就是4字节。\n  \n  \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、位域可以是无名位域，这时它只用来作填充或调整位置。无名的位域是不能使用的")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("struct STATUS\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  unsigned int "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("tag1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  unsigned "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("int")]),t._v(" \t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 占用7位，不使用")]),t._v("\n  unsigned int "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("tag3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n  unsigned int "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("tag4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" sta3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n \n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4、位域声明最大长度不能超过类型最大位数，并且赋值的时候，也不能超过最大范围。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("struct STATUS\n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  unsigned int "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("tag1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 33"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ❌ 33 位就是超过最大范围了，int最大32位。")]),t._v("\n  unsigned int "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("tag2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" sta4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n赋值：\n  sta4.tag2 = 100"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//❌错误，超过最大值了。2位只能赋值0，1，2，3 4种情况")]),t._v("\n\n\n\n")])])]),s("p",[t._v("位域的使用和结构成员的使用相同，其一般形式为：")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("位域变量名.位域名\n位域变量名->位域名\n")])])]),s("p",[t._v("用例：")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("#include <stdio.h>\n \nint "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("struct bs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        unsigned "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        unsigned "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        unsigned "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("c")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" bit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("*pbit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    bit.a=1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 给位域赋值（应注意赋值不能超过该位域的允许范围） */")]),t._v("\n    bit.b=7"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 给位域赋值（应注意赋值不能超过该位域的允许范围） */")]),t._v("\n    bit.c=15"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 给位域赋值（应注意赋值不能超过该位域的允许范围） */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d,%d,%d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("bit.a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("bit.b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("bit.c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 以整型量格式输出三个域的内容 */")]),t._v("\n    pbit=&bit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 把位域变量 bit 的地址送给指针变量 pbit */")]),t._v("\n    pbit->a=0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 用指针方式给位域 a 重新赋值，赋为 0 */")]),t._v("\n    pbit->b&=3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 使用了复合的位运算符 "&="，相当于：pbit->b=pbit->b&3，位域 b 中原有值为 7，与 3 作按位与运算的结果为 3（111&011=011，十进制值为 3） */')]),t._v("\n    pbit->c|=1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/* 使用了复合位运算符"|="，相当于：pbit->c=pbit->c|1，其结果为 15 */')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d,%d,%d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pbit->a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pbit->b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("pbit->c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 用指针方式输出了这三个域的值 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),s("p",[s("strong",[t._v("全局变量与局部变量在内存中的区别")]),t._v("：")]),t._v(" "),s("ul",[s("li",[t._v("全局变量保存在内存的全局存储区中，占用静态的存储单元；")]),t._v(" "),s("li",[t._v("局部变量保存在栈中，只有在所在函数被调用时才动态地为变量分配存储单元。")])]),t._v(" "),s("p",[t._v("局部变量优先级 > 全局变量")]),t._v(" "),s("div",{staticClass:"language-scss extra-class"},[s("pre",{pre:!0,attrs:{class:"language-scss"}},[s("code",[t._v("#include <stdio.h>\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 全局变量声明: 作用域整个文件 */")]),t._v("\nint a = 20"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \nint main "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 在主函数中的局部变量声明：作用域函数内 */")]),t._v("\n  int a = 10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  int b = 20"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  int c = 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  int "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n  printf "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value of a in main() = %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  c = "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  printf "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value of c in main() = %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n  return 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 形式参数啊啊a，b ：形式参数作用域在函数内，优先级高于全局变量 */")]),t._v("\nint "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" int b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    printf "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value of a in sum() = %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    printf "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value of b in sum() = %d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    return a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("编译： 从文件开头依次遍历，所以声明在前面的函数拿不到后面的函数声明实现")]),t._v(" "),s("p",[t._v("⚠️  在上面的例子中，除了全局变量和局部变量作用域区别之外，还有函数的作用域，")]),t._v(" "),s("p",[t._v("main 函数在调用后面声明的sum 函数之前，必须要先声明一下sum函数方法： int sum(int, int);")]),t._v(" "),s("p",[t._v("否则在编译器会找不到sum 函数声明报错，如果直接将函数声明定义放在main函数之前不用。")]),t._v(" "),s("p",[t._v("⚠️ 那么结构体也可以声明在main函数之后，然后在mian函数内部使用吗？")]),t._v(" "),s("p",[t._v("不可以！结构体必需在调用函数使用之前声明，不能滞后。")]),t._v(" "),s("p",[t._v("问？ 为什么两者有区别？")])])}),[],!1,null,null,null);s.default=p.exports}}]);