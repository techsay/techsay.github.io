(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{407:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("汇编语言多种多样，不同于其他语言，汇编指令对接的是硬件，所以不同厂家，甚至相同的厂家的不同芯片都有不同的汇编指令集。")]),t._v(" "),s("p",[t._v("因此花时间学完所有的汇编指令显得不必要，只要对主流的汇编语法学习然后融会贯通即可。")]),t._v(" "),s("p",[t._v("常见学习的汇编：")]),t._v(" "),s("p",[t._v("1、8086汇编，intel-16，早期较为基础的汇编指令，也是入门常用的汇编学习版本，大学教材《王爽汇编xx》")]),t._v(" "),s("p",[t._v("2、intel-32位 ，intel的32位芯片")]),t._v(" "),s("p",[t._v("3、intel-64，现在主流的intel芯片版本")]),t._v(" "),s("p",[t._v("4、ARM-64，ARM当前主流的版本")]),t._v(" "),s("p",[t._v("⚠️ 注意：")]),t._v(" "),s("p",[t._v("本篇以C++语法对比介绍intel-32汇编指令集（无特殊说明的，下面介绍的汇编指令均为 intel-32 指令集）")]),t._v(" "),s("h2",{attrs:{id:"基本结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本结构"}},[t._v("#")]),t._v(" 基本结构")]),t._v(" "),s("h3",{attrs:{id:"hello-world"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[t._v("#")]),t._v(" Hello World")]),t._v(" "),s("p",[t._v("Hello World 示例对比")]),t._v(" "),s("p",[t._v("1、C++ 显示字符串“ Hello World”")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引入支持输入输出的库")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命名空间")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 程序开始执行入口函数")]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cout 输出")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[s("a",{attrs:{href:"https://c.runoob.com/compile/12/",target:"_blank",rel:"noopener noreferrer"}},[t._v("C++在线编译（菜鸟工具）"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("2、intel32汇编语言显示字符串“ Hello World”")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .text")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global _start   ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("          \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(",len   \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(",msg    \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("      \n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("       \n   int  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("       \n\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("      \n   int  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("     \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .data")]),t._v("\nmsg db "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, world!'")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xa")]),t._v("  \nlen equ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" msg    \n")])])]),s("p",[s("a",{attrs:{href:"https://www.jc2182.com/runcode.html?filename=helloword&type=21&module=jiaocheng",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接：intel32汇编在线编译"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("上面结果都是打印一个  'Hello, world!' 但是，")]),t._v(" "),s("p",[t._v("显然汇编语法较为复杂，下面将先从结构上介绍他们的区别。")]),t._v(" "),s("p",[t._v("（具体 ax、bx、cx、dx、int 等指令后面再介绍）")]),t._v(" "),s("h3",{attrs:{id:"语法结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法结构"}},[t._v("#")]),t._v(" 语法结构")]),t._v(" "),s("p",[t._v("改造C++  Hello World示例语法：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引入支持输入输出的库")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 命名空间")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1、data段: 被定义不可修改的数据常量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" string msg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2、text段：程序代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3、程序入口函数")]),t._v("\n\t\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cout 输出")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4、程序返回")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ret")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("p",[t._v("汇编代码： Hello World")]),t._v(" "),s("div",{staticClass:"language-assembly extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("; 1、data段: 被定义不可修改的数据常量\nsection\t.data\nmsg db 'Hello, world!', 0xa  ;要打印的字符串\nlen equ $ - msg     ;字符串的长度，尾地址（$）- 起始地址（msg[0]）= 字符串长度 \n\n; 2、text段：程序代码\nsection\t.text\n   global _start     ;必须为链接器(ld)声明\n\n_start:\t            ; 3、程序入口函数：告诉链接器入口点\n   mov\tedx,len     ;消息长度\n   mov\tecx,msg     ;写消息\n   mov\tebx,1       ;文件描述符 (stdout)\n   mov\teax,4       ;系统调用号 (sys_write)\n   int\t0x80        ;调用内核\n\n   mov\teax,1       ;系统调用号 (sys_exit)\n   ; 4、程序中断 \n   int\t0x80        ;调用内核\n")])])]),s("p",[t._v("对比两段代码（大概类比，方便记忆）：")]),t._v(" "),s("p",[s("strong",[t._v("1、data段:")])]),t._v(" "),s("p",[t._v("被定义不可修改的数据常量，其中数据 **msg db ***** 等同于C++ 常量  "),s("strong",[t._v("const string msg")])]),t._v(" "),s("p",[s("strong",[t._v("2、text段：声明")])]),t._v(" "),s("p",[t._v("程序代码，比如入口函数声明 "),s("strong",[t._v("global _start")]),t._v(" 等同于C++ main函数声明 "),s("strong",[t._v("int main();")])]),t._v(" "),s("p",[s("strong",[t._v("3、text段：程序实现")])]),t._v(" "),s("p",[t._v("程序入口函数")]),t._v(" "),s("p",[t._v("代码实现  "),s("strong",[t._v("_start:")]),t._v(" 等同于 C++ main函数 实现  "),s("strong",[t._v("int main(){ *** }")])]),t._v(" "),s("p",[s("strong",[t._v("4、text段：执行中断或退出")])]),t._v(" "),s("p",[t._v("一个程序的函数通常会在使用完后中断退出")]),t._v(" "),s("p",[t._v("mov\teax,1   ;系统调用sys_exit，相当main函数的退出，也即是进程退出")]),t._v(" "),s("p",[t._v("返回：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("mov\teax"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("调用内核中断\n\n上面两句相当于函数（过程）的返回吧，\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ：C"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("中当前函数执行完毕\n")])])]),s("p",[s("strong",[t._v("5、屏幕输出")])]),t._v(" "),s("p",[t._v("cout ： c++屏幕输出")]),t._v(" "),s("p",[t._v("mov\tebx,1       ;文件描述符 (stdout)")]),t._v(" "),s("p",[s("strong",[t._v("6、注释")])]),t._v(" "),s("p",[t._v("intel32汇编语言 "),s("strong",[t._v("行")]),t._v("注释以分号（;）开头")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 注释信息")]),t._v("\n")])])]),s("p",[t._v("C++中"),s("strong",[t._v("行")]),t._v("注释")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释信息")]),t._v("\n")])])]),s("p",[t._v("(还有其他多种注释方法)")]),t._v(" "),s("h3",{attrs:{id:"intel32程序三个段结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intel32程序三个段结构"}},[t._v("#")]),t._v(" intel32程序三个段结构")]),t._v(" "),s("h3",{attrs:{id:"_1、data段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、data段"}},[t._v("#")]),t._v(" 1、data段")]),t._v(" "),s("p",[s("strong",[t._v("数据（data）段")]),t._v("被用于声明初始化的数据或常数。此数据在运行时不会更改。您可以在段中声明各种常量值，文件名或缓冲区大小等。")]),t._v(" "),s("p",[t._v("声明数据段的语法是-")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section.data")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2、bss-段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、bss-段"}},[t._v("#")]),t._v(" 2、bss 段")]),t._v(" "),s("p",[t._v("在"),s("strong",[t._v("bss段")]),t._v("用于声明变量。声明bss段的语法是-")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .bss")]),t._v("           "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";未初始化的数据")]),t._v("\n   num resb "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3、text段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、text段"}},[t._v("#")]),t._v(" 3、text段")]),t._v(" "),s("p",[s("strong",[t._v("代码段")]),t._v("被用于保持实际的代码。该段必须以全局声明**_start**开头，该声明告诉内核程序从何处开始执行。")]),t._v(" "),s("p",[t._v("声明代码段的语法是-")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section.text")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global _start")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("\n")])])]),s("h2",{attrs:{id:"寄存器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#寄存器"}},[t._v("#")]),t._v(" 寄存器")]),t._v(" "),s("h3",{attrs:{id:"常见寄存器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见寄存器"}},[t._v("#")]),t._v(" 常见寄存器")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("寄存器")]),t._v(" "),s("th",[t._v("16位")]),t._v(" "),s("th",[t._v("32位")]),t._v(" "),s("th",[t._v("64位")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("累加寄存器 "),s("code",[t._v("accumulator")])]),t._v(" "),s("td",[t._v("AX")]),t._v(" "),s("td",[s("strong",[t._v("E")]),t._v("AX")]),t._v(" "),s("td",[s("strong",[t._v("R")]),t._v("AX")])]),t._v(" "),s("tr",[s("td",[t._v("基址寄存器 "),s("code",[t._v("base")])]),t._v(" "),s("td",[t._v("BX")]),t._v(" "),s("td",[s("strong",[t._v("E")]),t._v("BX")]),t._v(" "),s("td",[s("strong",[t._v("R")]),t._v("BX")])]),t._v(" "),s("tr",[s("td",[t._v("计数寄存器 "),s("code",[t._v("count")])]),t._v(" "),s("td",[t._v("CX")]),t._v(" "),s("td",[s("strong",[t._v("E")]),t._v("CX")]),t._v(" "),s("td",[s("strong",[t._v("R")]),t._v("CX")])]),t._v(" "),s("tr",[s("td",[t._v("数据寄存器 "),s("code",[t._v("data")])]),t._v(" "),s("td",[t._v("DX")]),t._v(" "),s("td",[s("strong",[t._v("E")]),t._v("DX")]),t._v(" "),s("td",[s("strong",[t._v("R")]),t._v("DX")])]),t._v(" "),s("tr",[s("td",[t._v("堆栈基指针 "),s("code",[t._v("Base Pointer")])]),t._v(" "),s("td",[t._v("BP")]),t._v(" "),s("td",[s("strong",[t._v("E")]),t._v("BP")]),t._v(" "),s("td",[s("strong",[t._v("R")]),t._v("BP")])]),t._v(" "),s("tr",[s("td",[t._v("变址寄存器 "),s("code",[t._v("Source Index")])]),t._v(" "),s("td",[t._v("SI")]),t._v(" "),s("td",[s("strong",[t._v("E")]),t._v("SI")]),t._v(" "),s("td",[s("strong",[t._v("R")]),t._v("SI")])]),t._v(" "),s("tr",[s("td",[t._v("堆栈顶指针 "),s("code",[t._v("Stack Pointer")])]),t._v(" "),s("td",[t._v("SP")]),t._v(" "),s("td",[s("strong",[t._v("E")]),t._v("SP")]),t._v(" "),s("td",[s("strong",[t._v("R")]),t._v("SP")])]),t._v(" "),s("tr",[s("td",[t._v("指令寄存器 "),s("code",[t._v("Instruction Pointer")])]),t._v(" "),s("td",[t._v("IP")]),t._v(" "),s("td",[s("strong",[t._v("E")]),t._v("IP")]),t._v(" "),s("td",[s("strong",[t._v("R")]),t._v("IP")])])])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("AH&AL＝AX(accumulator)：累加寄存器 \nBH&BL＝BX(base)：基址寄存器 \nCH&CL＝CX(count)：计数寄存器 \nDH&DL＝DX(data)：数据寄存器 \nSP（Stack Pointer）：堆栈指针寄存器 \nBP（Base Pointer）：基址指针寄存器 \nSI（Source Index）：源变址寄存器 \nDI（Destination Index）：目的变址寄存器 \nIP（Instruction Pointer）：指令指针寄存器 \nCS（Code Segment）代码段寄存器 \nDS（Data Segment）：数据段寄存器 \nSS（Stack Segment）：堆栈段寄存器 \nES（Extra Segment）：附加段寄存器 \n")])])]),s("p",[t._v("⚠️")]),t._v(" "),s("p",[t._v("1、你会发现寄存器指令名称基本是在16位基础上衍生而来，比如32位 EAX是在16 位AX前加E，64 位 RAX是在16 位AX前加R")]),t._v(" "),s("p",[t._v("2、H是高位缩写，L是低位缩写。比如 AX 由AH 高位和AL低位组合，这是为兼容8位寄存器而来")]),t._v(" "),s("p",[t._v("3、篇头demo中下面代码什么意思？")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("\t            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 3、程序入口函数：告诉链接器入口点")]),t._v("\n   mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(",len     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";消息长度")]),t._v("\n   mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(",msg     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";写消息")]),t._v("\n   mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";文件描述符 (stdout)")]),t._v("\n   mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";系统调用号 (sys_write)")]),t._v("\n   int\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";调用内核")]),t._v("\n")])])]),s("p",[t._v("拆分解释一下：")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; 程序入口函数：告诉链接器入口点，加这个好理解，就是main函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("\t            \n   \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";比如C语法中 int a = 1; 就默认处理好了变量a的数据长度，通常是4字节，代码底层帮你申请了对应大小的空间，通常使用 alloc 分配。")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";而在汇编中可以通过 dx 告诉编译器当前对象的需要分配的内存大小，")]),t._v("\n   mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(",len     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";消息长度")]),t._v("\n   \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; int a = 1 中，赋值1给变量a的过程在汇编中可以使用 cx 这个指令")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("; mov 赋值，msg 数据， cx 指向真实的物理地址，将内容写入的地方")]),t._v("\n   mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(",msg     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";写消息")]),t._v("\n   \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";这个就是打印指令，也即是输出指令，cout、print、等等类似")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";在bx寄存器中写入1就是输出信息")]),t._v("\n   mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";文件描述符 (stdout)")]),t._v("\n   \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";ax中写入100（4）即是相当于函数的返回指令，告诉CPU下面函数过程要做的动作是执行后返回")]),t._v("\n   mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";系统调用号 (sys_write)")]),t._v("\n   \n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";int 不是c中的int，而是 Interrupt，中断的意思，而0x80是intel-32中调用linux中系统命令，可以理解为system_call，也就是系统函数调用")]),t._v("\n   int\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";调用内核")]),t._v("\n")])])]),s("h2",{attrs:{id:"汇编命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#汇编命令"}},[t._v("#")]),t._v(" 汇编命令")]),t._v(" "),s("p",[t._v("列举几个汇编命令：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("指令")]),t._v(" "),s("th",[t._v("作用")]),t._v(" "),s("th")])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("ORG")]),t._v(" "),s("td",[t._v("在程序执行的时候，会告诉编译器将这些指令转载到内存的哪个位置")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("JMP （jump）")]),t._v(" "),s("td",[t._v("跳转。类似于C中的 go to")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("entry（）")]),t._v(" "),s("td",[t._v("JMP 指令的跳转目的地")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("DB（data byte）")]),t._v(" "),s("td",[t._v("向文件中直接写入一个字节的指令")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("DW（data word）")]),t._v(" "),s("td",[t._v("写入一个字，两个字节")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("DD（data double-word）")]),t._v(" "),s("td",[t._v("写入两个字，4个字节")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("RESB（reserve byte）")]),t._v(" "),s("td",[t._v("与 DB相反，指定的地址清空，保留备用")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("RESW（reserve data double-word）")]),t._v(" "),s("td",[t._v("与 DW相反")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("MOV（move）")]),t._v(" "),s("td",[t._v("移动、赋值，等等动作")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("ADD（add）")]),t._v(" "),s("td",[t._v("加法指令")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("CMP（compare）")]),t._v(" "),s("td",[t._v("比较指令。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("INT（Interrupt）")]),t._v(" "),s("td",[t._v("中断指令，用来调用BIOS中函数的指令")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("HLT（halt）")]),t._v(" "),s("td",[t._v("停止。让CPU进入待机状态，只要外部发生变化，CPU就会醒过来。")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("JC（jump if carry）")]),t._v(" "),s("td",[t._v("标志，INF调用函数后，没有错，进位标志为0，有错，进位标志为1")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("JNC（jump if not carry）")]),t._v(" "),s("td",[t._v("判断指令：进位为0就跳转")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("JAE（jump if above or equal）")]),t._v(" "),s("td",[t._v("判断指令：大于等于时跳转")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("JBE（jump if below or equal）")]),t._v(" "),s("td",[t._v("判断指令：小于等于则跳转")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("RET（return）")]),t._v(" "),s("td",[t._v("返回")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("XCHG （exchange）")]),t._v(" "),s("td",[t._v("交换指令")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("push")]),t._v(" "),s("td",[t._v("栈：进栈，或叫压栈指令")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("pop")]),t._v(" "),s("td",[t._v("栈：出栈指令")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("sub、sbb、dec、neg、cmp")]),t._v(" "),s("td",[t._v("减法指令")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("mul、imul")]),t._v(" "),s("td",[t._v("乘法指令")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("div、idiv")]),t._v(" "),s("td",[t._v("除法指令")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("not、and、or、xor、test")]),t._v(" "),s("td",[t._v("逻辑运算指令")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("ROL、ROR、RCL、RCR")]),t._v(" "),s("td",[t._v("循环移位指令")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("LOOP、LOOPE/LOOPZ、LOOPNE/LOOPNZ、JCXZ")]),t._v(" "),s("td",[t._v("循环指令")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("其他详见汇编指令梳理篇章")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td"),t._v(" "),s("td"),t._v(" "),s("td")])])]),t._v(" "),s("h2",{attrs:{id:"变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),s("h3",{attrs:{id:"define-变量内存分配、创建-alloc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#define-变量内存分配、创建-alloc"}},[t._v("#")]),t._v(" define：变量内存分配、创建（alloc）")]),t._v(" "),s("p",[t._v("NASM提供了各种定义指令来为变量保留存储空间。")]),t._v(" "),s("p",[t._v("define assembler指令用于分配存储空间。")]),t._v(" "),s("p",[t._v("在C++中：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.345")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbyte z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token char"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),s("p",[t._v("而汇编中，变量示例：")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("str          DB      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xyz'")]),t._v("\nnum          DW      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("354534")]),t._v("\nneg_num      DW      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("323")]),t._v("\nbig_num      DQ      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("119287337644")]),t._v("\nreal_num     DD      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.23456")]),t._v("\nreal_num2    DQ      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("123.456")]),t._v("\n")])])]),s("p",[t._v("其中内存分配的define指令:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("指令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("目的")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("储存空间")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("DB")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义字节")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("分配1个字节")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("DW")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义字")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("分配2个字节")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("DD")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义双字")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("分配4个字节")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("DQ")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义四字")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("分配8个字节")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("DT")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义十个字节")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("分配10个字节")])])])]),t._v(" "),s("h3",{attrs:{id:"示例-输出字符串-xyz"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例-输出字符串-xyz"}},[t._v("#")]),t._v(" 示例：输出字符串 xyz")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .text")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global _start          ")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";链接器入口声明")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("                   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";链接器执行入口")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";定义长度")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(",str1          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";写入数据")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";基地址(base)寄存器, 在内存寻址时存放基地址")]),t._v("\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";输出信息")]),t._v("\n   int  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";中断")]),t._v("\n\n   mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";退出exit")]),t._v("\n   int  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";中断")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section .data")]),t._v("\nstr1 DB "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xyz'")]),t._v("\n")])])]),s("p",[t._v("结果:")]),t._v(" "),s("div",{staticClass:"language-t4 extra-class"},[s("pre",{pre:!0,attrs:{class:"language-t4"}},[s("code",[t._v("xyz\n")])])]),s("blockquote",[s("p",[t._v("1、字符的每个字节以十六进制形式存储为其ASCII值")]),t._v(" "),s("p",[t._v("2、数据类型转换为其等效的16位二进制数，并以十六进制数形式存储")]),t._v(" "),s("p",[t._v("3、使用小尾存储顺序（高字节存放内存高位，低字节在低位）")]),t._v(" "),s("p",[t._v("4、负数以补码形式表示")])]),t._v(" "),s("h3",{attrs:{id:"reserve-变量内存释放-release"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reserve-变量内存释放-release"}},[t._v("#")]),t._v(" reserve：变量内存释放（release）")]),t._v(" "),s("p",[t._v("相应的，上面define给对应内存分配空间，而reserve相反，是给对应内存地址清理空间，可以理解为 release")]),t._v(" "),s("p",[t._v("reserve指令用于为未初始化的数据保留空间。reserve指令采用单个操作数，该操作数指定要保留的空间单位数。每个define指令都有一个相关的reserve指令。")]),t._v(" "),s("p",[t._v("保留指令有五种基本形式-")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("指令")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("目的")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("RESB")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("保留一个字节")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("RESW")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("保留字")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("RESD")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("保留双字")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("RESQ")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("保留四字")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("REST")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("保留十个字节")])])])]),t._v(" "),s("h3",{attrs:{id:"示例-申请空间并打印"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例-申请空间并打印"}},[t._v("#")]),t._v(" 示例：申请空间并打印")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section\t.text")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global _start     ")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";必须为链接器(ld)声明")]),t._v("\n   \n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("\t            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";告诉链接器入口点")]),t._v("\n\t  \n\t  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";1、打印固定字符串 “我的年龄：”")]),t._v("\n    mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(",len     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";设置数据长度")]),t._v("\n    mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(",msg     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";赋值数据")]),t._v("\n    mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";打印信息")]),t._v("\n    mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";执行函数标记4")]),t._v("\n    int\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";调用内核call函数执行")]),t._v("\n\n\t  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";2、打印存储后的数据 “9”")]),t._v("\n    mov  "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'9'")]),t._v("\n    mov  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("[")]),t._v("sum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("]")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";将数据9存储到申请的内存中")]),t._v("\n    \n    mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("     \n    mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(",sum  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";从 sum中取数据存入")]),t._v("\n    mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("       \n    mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("      \n    int\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("        \n\t\t\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";3、退出")]),t._v("\n    mov\t"),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";退出进程sys_exit")]),t._v("\n    int\t"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";调用内核call函数执行退出")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section\t.data")]),t._v("\nmsg db "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我的年龄：'")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xA")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xD")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";换行 0xA,0xD 。要打印的字符串")]),t._v("\nlen equ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" msg     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";字符串的长度")]),t._v("\n\nsegment .bss\nsum resb "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";申请1字节空间")]),t._v("\n")])])]),s("p",[t._v("结果")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("我的年龄：\n9\n")])])]),s("h2",{attrs:{id:"常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[t._v("#")]),t._v(" 常量")]),t._v(" "),s("p",[t._v("在C++中我们使用过 const、#define 等 定义一个常量，汇编中类似")]),t._v(" "),s("h3",{attrs:{id:"常量定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量定义"}},[t._v("#")]),t._v(" 常量定义")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("intel 32汇编指令")]),t._v(" "),s("th",[t._v("C++")]),t._v(" "),s("th",[t._v("含义")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("EQU （equ）")]),t._v(" "),s("td",[t._v("const （比如：const int a = 1;）")]),t._v(" "),s("td",[t._v("不可变常量赋值")])]),t._v(" "),s("tr",[s("td",[t._v("%assign")]),t._v(" "),s("td",[t._v("static")]),t._v(" "),s("td",[t._v("静态变量，可修改")])]),t._v(" "),s("tr",[s("td",[t._v("%define")]),t._v(" "),s("td",[t._v("#define")]),t._v(" "),s("td",[t._v("单行宏，代码替换")])]),t._v(" "),s("tr",[s("td",[t._v("%macro - %endmacro")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("多行宏，代码替换")])])])]),t._v(" "),s("p",[t._v("多行宏:")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("macro  宏名称 参数数量                      \n        push    "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebp")]),t._v("                \n        mov     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebp")]),t._v(","),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("esp")]),t._v("                \n        sub     "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("esp")]),t._v(","),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("               \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("endmacro\n")])])]),s("p",[t._v("指令区分大小写")]),t._v(" "),s("h3",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("p",[t._v("1、C++示例：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<iostream>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("using")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" std"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 常量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i_x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 宏")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("s_y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 静态变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" d_z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"不可修改 i_x = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" i_x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"不可修改 s_y = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" s_y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n    d_z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d_z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    cout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"可修改 d_z = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" d_z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("结果")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("不可修改 i_x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n不可修改 s_y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hello\n可修改 d_z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.34")]),t._v("\n")])])]),s("h3",{attrs:{id:"汇编equ示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#汇编equ示例"}},[t._v("#")]),t._v(" 汇编EQU示例")]),t._v(" "),s("p",[t._v("将通用指令固定数据定义为常量，方便使用")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[t._v("sys_exit  \tequ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";退出")]),t._v("\nsys_write \tequ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";函数过程写")]),t._v("\nsdt_in      equ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";输入")]),t._v("\nsdt_out    \tequ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";输出")]),t._v("\nsys_call    equ "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";调用")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section  .text")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global _start    ")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("            \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", sys_write         \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", sdt_out         \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", msg1         \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", len1 \n   int sys_call                \n          \n   mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(",sys_exit   \n   int sys_call     \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section  .data")]),t._v("\nmsg1 db "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是第一行信息!'")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xA")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0xD")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";换行 0xA,0xD")]),t._v("\nlen1 equ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" msg1                        \n")])])]),s("h3",{attrs:{id:"汇编宏示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#汇编宏示例"}},[t._v("#")]),t._v(" 汇编宏示例")]),t._v(" "),s("p",[t._v("将上面示例使用"),s("strong",[t._v("宏")]),t._v("修改：")]),t._v(" "),s("div",{staticClass:"language-nasm extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nasm"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";使用字符串变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("macro  set_string "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("                      \n        mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ecx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("          \n        mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("edx")]),t._v(", len1                 \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("endmacro\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";调用并输出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("macro  run_out "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("                      \n        mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("         \n         mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("ebx")]),t._v(", "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" \n         int "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("               \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("endmacro\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";退出")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("macro  return "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("                      \n        mov "),s("span",{pre:!0,attrs:{class:"token register variable"}},[t._v("eax")]),t._v(","),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("   \n         int "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x80")]),t._v("              \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v("endmacro\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section  .text")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("global _start    ")]),t._v("\n        \n"),s("span",{pre:!0,attrs:{class:"token label function"}},[t._v("_start:")]),t._v("      \n\n   set_string msg1 \n   run_out\n                  \n          \n   return     \n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("section  .data")]),t._v("\nmsg1 db "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'使用宏修改!'")]),t._v("\nlen1 equ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" msg1 \n")])])]),s("p",[t._v("退出的汇编代码直接使用 return 替换，这样更容易记忆。")])])}),[],!1,null,null,null);s.default=n.exports}}]);